{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\xmark\\\\Desktop\\\\Code\\\\Servers\\\\Qumoc\\\\food-commune\\\\src\\\\components\\\\MyGroupPage.jsx\";\nimport React, { Component } from 'react';\nimport ItemView from './ItemView';\nimport MyGroupHeader from './MyGroupHeader';\nimport MyGroupProfile from './MyGroupProfile';\nimport MyGroupBuys from './MyGroupBuys';\nimport MyGroupMembers from './MyGroupMemebers';\nimport MyGroupNews from './MyGroupNews';\nimport { connect } from \"react-redux\";\n/**\r\n * Roles: How user views are affected my their ROLE level\r\n *\r\n * Description: state.userIsMember determines the ROLL.\r\n *              userIsMember = 0 is Admin priviledges.\r\n *              userIsMember = 1 is Non-Admin group user. Cannot see admin options.\r\n *              userIsMember > 1 (2 is not a member, but possible requested to join group).\r\n *\r\n *              Currently only using 0, 1, and 2 for ROLES.\r\n */\n\nconst mapStateToProps = state => {\n  return {\n    provisional: state.provisional,\n    user: state.user,\n    token: state.token\n  };\n};\n\nclass MyGroupPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modal: null,\n      modalUpdate: null,\n      joinRequested: false,\n      userIsMember: 3\n    };\n\n    this.itemView = deal => {\n      let updateBuy = this.state.data.Purchases.find(obj => {\n        return obj.user_id === this.state.user.id && obj.deal_id === deal.id;\n      });\n      console.log(updateBuy);\n\n      if (updateBuy) {\n        this.setState({\n          modalUpdate: updateBuy,\n          modal: deal\n        });\n      } else {\n        this.setState({\n          modal: deal\n        });\n      }\n    };\n\n    this.closeModal = () => {\n      this.setState({\n        modal: null\n      });\n    };\n\n    this.sendJoinRequest = () => {\n      joinRequest(this.state.token, this.state.user, this.state.data.Clan[0].id).then(resolved => {\n        console.log(resolved);\n        this.setState({\n          joinRequested: true\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.leaveGroup = () => {\n      removeUserFromGroup(this.state.token, this.state.user, this.state.data.Clan[0].id).then(resolved => {\n        console.log(resolved);\n        this.setState({\n          userIsMember: false,\n          joinRequested: false\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.memberRequest = (user_id, memberState) => {\n      handleMemberRequest(this.state.token, user_id, this.state.data.Clan[0].id, memberState).then(resolved => {\n        console.log(resolved);\n\n        if (memberState === 1) {\n          this.setState(prevState => {\n            let data = { ...prevState.data\n            };\n            let requestIndex = data.JoinRequests.findIndex(obj => {\n              return obj.id === user_id;\n            });\n            let joinRequest = data.JoinRequests.splice(requestIndex, 1);\n            joinRequest[0].user_is_admin = 0;\n            data.Members.push(joinRequest[0]);\n            return {\n              data: data\n            };\n          });\n        } else if (memberState === 3) {}\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.makeRevokeAdmin = (user_id, adminValue) => {\n      adminToggle(this.state.token, user_id, this.state.data.Clan[0].id, adminValue).then(resolved => {\n        console.log(resolved);\n        this.setState(prevState => {\n          let data = { ...prevState.data\n          };\n          let memberIndex = data.Members.findIndex(obj => {\n            return obj.id === user_id;\n          });\n          data.Members[memberIndex].user_is_admin = adminValue;\n          return {\n            data: data\n          };\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.removeMember = user_id => {\n      deleteMember(this.state.token, user_id, this.state.data.Clan[0].id).then(resolved => {\n        console.log(resolved);\n        this.setState(prevState => {\n          let data = { ...prevState.data\n          };\n          let memberIndex = data.Members.findIndex(obj => {\n            return obj.id === user_id;\n          });\n          data.Members.splice(memberIndex, 1);\n          return {\n            data: data\n          };\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.updateClan = payload => {\n      updateClanFields(this.state.token, this.state.data.Clan[0].id, payload).then(resolved => {\n        console.log(resolved);\n        this.setState(prevState => {\n          let data = { ...prevState.data\n          };\n          let keys = Object.keys(payload);\n          keys.forEach(k => {\n            data.Clan[0][k] = payload[k];\n          });\n          return {\n            data: data\n          };\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.removeBuy = dealId => {\n      deleteGroupBuy(this.state.token, this.state.data.Clan[0].id, dealId).then(resolved => {\n        console.log(resolved);\n        console.log(\"BUY ID = \", dealId);\n        this.setState(prevState => {\n          let data = { ...prevState.data\n          };\n          let buyIndex = data.Buys.findIndex(obj => {\n            return obj.id === dealId;\n          });\n          console.log(buyIndex);\n          data.Buys.splice(buyIndex, 1);\n          return {\n            data: data\n          };\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.addNewNews = message => {\n      insertNews(this.state.token, this.state.data.Clan[0].id, message).then(resolved => {\n        console.log(resolved);\n        this.setState(prevState => {\n          let data = { ...prevState.data\n          };\n          data.News.unshift({\n            message: message\n          });\n          return {\n            data: data\n          };\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n  }\n\n  componentWillMount() {\n    let params = new URLSearchParams(window.location.search);\n    let ref = params.get(\"ref\");\n    fetchData(this.props.token, this.props.user.id, ref).then(resolved => {\n      console.log(resolved);\n      this.setState({\n        data: resolved\n      }); // Is User a Clan member?\n\n      let user = resolved.Members.find(obj => {\n        return obj.id === this.state.user.id;\n      });\n\n      if (user) {\n        this.setState({\n          userIsMember: user.user_is_admin === 1 ? 0 : 1\n        });\n      } else {\n        this.setState({\n          userIsMember: 2\n        });\n      } // Did User request to join Clan?\n\n\n      let joinRequest = resolved.JoinRequests.find(obj => {\n        if (obj.id === this.state.user.id) {\n          this.setState({\n            joinRequested: true\n          });\n        }\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"mygroup-page\",\n      className: \"row row-border justify-content-center mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"main-content\",\n      className: \"col spartan\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }\n    }, this.state.modal && /*#__PURE__*/React.createElement(ItemView, {\n      modal: this.state.modal,\n      closeModal: this.closeModal,\n      options: GroupPageActions(this.state.token, this.state.user.id, this.state.data.Clan[0].id, this.state.modal, this.state.modalUpdate),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(MyGroupHeader, {\n      sendJoinRequest: this.sendJoinRequest,\n      joinRequested: this.state.joinRequested,\n      data: this.state.data,\n      userIsMember: this.state.userIsMember,\n      leaveGroup: this.leaveGroup,\n      updateClan: this.updateClan,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"mygroup-profile\",\n      className: \"col-sm-12 col-lg-6 d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 15\n      }\n    }, this.state.data && /*#__PURE__*/React.createElement(MyGroupProfile, {\n      data: this.state.data,\n      userIsMember: this.state.userIsMember,\n      updateClan: this.updateClan,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"mygroup-buys\",\n      className: \"col-sm-12 col-lg-6 d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(MyGroupBuys, {\n      itemView: this.itemView,\n      data: this.state.data,\n      removeBuy: this.removeBuy,\n      userIsMember: this.state.userIsMember,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"members-card\",\n      className: \"col-sm-12 col-lg-6 d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(MyGroupMembers, {\n      data: this.state.data,\n      user: this.state.user,\n      memberRequest: this.memberRequest,\n      userIsMember: this.state.userIsMember,\n      makeRevokeAdmin: this.makeRevokeAdmin,\n      removeMember: this.removeMember,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"news-card\",\n      className: \"col-sm-12 col-lg-6 d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(MyGroupNews, {\n      addNewNews: this.addNewNews,\n      data: this.state.data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 17\n      }\n    }))))));\n  }\n\n}\n\nexport default connect(mapStateToProps)(MyGroupPage);\n\nfunction fetchData(token, userid, ref) {\n  console.log(\"fetching data......\", token, userid);\n  return new Promise((resolve, reject) => {\n    let request = {\n      userId: userid,\n      clanId: ref\n    };\n    let options = {\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }),\n      body: JSON.stringify({\n        entity: request\n      })\n    };\n    fetch(\"/foodcommune/accounts/clanView\", options).then(res => {\n      return res.json();\n    }).then(res => {\n      console.log(res);\n\n      if (!res.success) {\n        // Return to account detail and display error message\n        resolve(res);\n      } else {\n        reject(\"Unable to retrieve data\");\n      }\n    });\n  });\n}\n\nfunction joinRequest(token, user, clanId) {\n  console.log(\"fetching data......\");\n  return new Promise((resolve, reject) => {\n    let request = {\n      user: user,\n      clanId: clanId\n    };\n    let options = {\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }),\n      body: JSON.stringify({\n        entity: request\n      })\n    };\n    fetch(\"/foodcommune/accounts/joinClanRequest\", options).then(res => {\n      return res.json();\n    }).then(res => {\n      console.log(res);\n\n      if (res.success) {\n        // Return to account detail and display error message\n        resolve(res);\n      } else {\n        reject(\"Unable to retrieve data\");\n      }\n    });\n  });\n}\n\nfunction removeUserFromGroup(token, user, clanId) {\n  console.log(\"fetching data......\");\n  return new Promise((resolve, reject) => {\n    let request = {\n      user: user,\n      clanId: clanId\n    };\n    let options = {\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }),\n      body: JSON.stringify({\n        entity: request\n      })\n    };\n    fetch(\"/foodcommune/accounts/removeUserFromClan\", options).then(res => {\n      return res.json();\n    }).then(res => {\n      console.log(res);\n\n      if (res.success) {\n        // Return to account detail and display error message\n        resolve(res);\n      } else {\n        reject(\"Unable to retrieve data\");\n      }\n    });\n  });\n}\n\nfunction handleMemberRequest(token, user, clanId, memberState) {\n  return new Promise((resolve, reject) => {\n    let request = {\n      user: user,\n      clanId: clanId,\n      memberState: memberState\n    };\n    let options = {\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }),\n      body: JSON.stringify({\n        entity: request\n      })\n    };\n    fetch(\"/foodcommune/accounts/addUserToGroup\", options).then(res => {\n      return res.json();\n    }).then(res => {\n      console.log(res);\n\n      if (res.success) {\n        // Return to account detail and display error message\n        resolve(res);\n      } else {\n        reject(\"Unable to retrieve data\");\n      }\n    });\n  });\n}\n\nfunction adminToggle(token, user, clanId, adminValue) {\n  return new Promise((resolve, reject) => {\n    let request = {\n      user: user,\n      clanId: clanId,\n      adminValue: adminValue\n    };\n    let options = {\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }),\n      body: JSON.stringify({\n        entity: request\n      })\n    };\n    fetch(\"/foodcommune/accounts/adminToggle\", options).then(res => {\n      return res.json();\n    }).then(res => {\n      console.log(res);\n\n      if (res.success) {\n        // Return to account detail and display error message\n        resolve(res);\n      } else {\n        reject(\"Unable to retrieve data\");\n      }\n    });\n  });\n}\n\nfunction deleteMember(token, user, clanId) {\n  return new Promise((resolve, reject) => {\n    let request = {\n      user: user,\n      clanId: clanId\n    };\n    let options = {\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }),\n      body: JSON.stringify({\n        entity: request\n      })\n    };\n    fetch(\"/foodcommune/accounts/deleteMember\", options).then(res => {\n      return res.json();\n    }).then(res => {\n      console.log(res);\n\n      if (res.success) {\n        // Return to account detail and display error message\n        resolve(res);\n      } else {\n        reject(\"Unable to retrieve data\");\n      }\n    });\n  });\n}\n\nfunction updateClanFields(token, clanId, payload) {\n  return new Promise((resolve, reject) => {\n    let request = {\n      values: payload,\n      clanId: clanId\n    };\n    let options = {\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }),\n      body: JSON.stringify({\n        entity: request\n      })\n    };\n    fetch(\"/foodcommune/accounts/updateClanFields\", options).then(res => {\n      return res.json();\n    }).then(res => {\n      console.log(res);\n\n      if (res.success) {\n        // Return to account detail and display error message\n        resolve(res);\n      } else {\n        reject(\"Unable to retrieve data\");\n      }\n    });\n  });\n}\n\nfunction deleteGroupBuy(token, clanId, dealId) {\n  return new Promise((resolve, reject) => {\n    let request = {\n      clanId: clanId,\n      dealId: dealId\n    };\n    let options = {\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }),\n      body: JSON.stringify({\n        entity: request\n      })\n    };\n    fetch(\"/foodcommune/accounts/deleteGroupBuy\", options).then(res => {\n      return res.json();\n    }).then(res => {\n      console.log(res);\n\n      if (res.success) {\n        // Return to account detail and display error message\n        resolve(res);\n      } else {\n        reject(\"Unable to retrieve data\");\n      }\n    });\n  });\n}\n\nfunction insertNews(token, clanId, message) {\n  return new Promise((resolve, reject) => {\n    let request = {\n      clanId: clanId,\n      message: message\n    };\n    let options = {\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }),\n      body: JSON.stringify({\n        entity: request\n      })\n    };\n    fetch(\"/foodcommune/accounts/insertNews\", options).then(res => {\n      return res.json();\n    }).then(res => {\n      console.log(res);\n\n      if (res.success) {\n        // Return to account detail and display error message\n        resolve(res);\n      } else {\n        reject(\"Unable to retrieve data\");\n      }\n    });\n  });\n}","map":{"version":3,"sources":["C:/Users/xmark/Desktop/Code/Servers/Qumoc/food-commune/src/components/MyGroupPage.jsx"],"names":["React","Component","ItemView","MyGroupHeader","MyGroupProfile","MyGroupBuys","MyGroupMembers","MyGroupNews","connect","mapStateToProps","state","provisional","user","token","MyGroupPage","modal","modalUpdate","joinRequested","userIsMember","itemView","deal","updateBuy","data","Purchases","find","obj","user_id","id","deal_id","console","log","setState","closeModal","sendJoinRequest","joinRequest","Clan","then","resolved","catch","err","leaveGroup","removeUserFromGroup","memberRequest","memberState","handleMemberRequest","prevState","requestIndex","JoinRequests","findIndex","splice","user_is_admin","Members","push","makeRevokeAdmin","adminValue","adminToggle","memberIndex","removeMember","deleteMember","updateClan","payload","updateClanFields","keys","Object","forEach","k","removeBuy","dealId","deleteGroupBuy","buyIndex","Buys","addNewNews","message","insertNews","News","unshift","componentWillMount","params","URLSearchParams","window","location","search","ref","get","fetchData","props","render","GroupPageActions","userid","Promise","resolve","reject","request","userId","clanId","options","method","headers","Headers","Authorization","body","JSON","stringify","entity","fetch","res","json","success","values"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport ItemView from './ItemView';\r\nimport MyGroupHeader from './MyGroupHeader';\r\nimport MyGroupProfile from './MyGroupProfile';\r\nimport MyGroupBuys from './MyGroupBuys';\r\nimport MyGroupMembers from './MyGroupMemebers';\r\nimport MyGroupNews from './MyGroupNews';\r\nimport { connect } from \"react-redux\";\r\n\r\n/**\r\n * Roles: How user views are affected my their ROLE level\r\n *\r\n * Description: state.userIsMember determines the ROLL.\r\n *              userIsMember = 0 is Admin priviledges.\r\n *              userIsMember = 1 is Non-Admin group user. Cannot see admin options.\r\n *              userIsMember > 1 (2 is not a member, but possible requested to join group).\r\n *\r\n *              Currently only using 0, 1, and 2 for ROLES.\r\n */\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    provisional: state.provisional,\r\n    user: state.user,\r\n    token: state.token\r\n  };\r\n};\r\n\r\nclass MyGroupPage extends Component {\r\n  state = {\r\n    modal: null,\r\n    modalUpdate: null,\r\n    joinRequested: false,\r\n    userIsMember: 3\r\n  };\r\n\r\n  componentWillMount() {\r\n    let params = new URLSearchParams(window.location.search);\r\n    let ref = params.get(\"ref\");\r\n\r\n    fetchData(this.props.token, this.props.user.id, ref)\r\n      .then(resolved => {\r\n        console.log(resolved);\r\n        this.setState({ data: resolved });\r\n\r\n        // Is User a Clan member?\r\n        let user = resolved.Members.find(obj => {\r\n          return obj.id === this.state.user.id;\r\n        });\r\n        if (user) {\r\n          this.setState({ userIsMember: user.user_is_admin === 1 ? 0 : 1 });\r\n        } else {\r\n          this.setState({ userIsMember: 2 });\r\n        }\r\n\r\n        // Did User request to join Clan?\r\n        let joinRequest = resolved.JoinRequests.find(obj => {\r\n          if (obj.id === this.state.user.id) {\r\n            this.setState({ joinRequested: true });\r\n          }\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  itemView = deal => {\r\n    let updateBuy = this.state.data.Purchases.find(obj => {\r\n      return obj.user_id === this.state.user.id && obj.deal_id === deal.id;\r\n    });\r\n    console.log(updateBuy);\r\n    if (updateBuy) {\r\n      this.setState({ modalUpdate: updateBuy, modal: deal });\r\n    } else {\r\n      this.setState({ modal: deal });\r\n    }\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.setState({ modal: null });\r\n  };\r\n\r\n  sendJoinRequest = () => {\r\n    joinRequest(this.state.token, this.state.user, this.state.data.Clan[0].id)\r\n      .then(resolved => {\r\n        console.log(resolved);\r\n        this.setState({ joinRequested: true });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  leaveGroup = () => {\r\n    removeUserFromGroup(\r\n      this.state.token,\r\n      this.state.user,\r\n      this.state.data.Clan[0].id\r\n    )\r\n      .then(resolved => {\r\n        console.log(resolved);\r\n        this.setState({ userIsMember: false, joinRequested: false });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  memberRequest = (user_id, memberState) => {\r\n    handleMemberRequest(\r\n      this.state.token,\r\n      user_id,\r\n      this.state.data.Clan[0].id,\r\n      memberState\r\n    )\r\n      .then(resolved => {\r\n        console.log(resolved);\r\n        if (memberState === 1) {\r\n          this.setState(prevState => {\r\n            let data = { ...prevState.data };\r\n            let requestIndex = data.JoinRequests.findIndex(obj => {\r\n              return obj.id === user_id;\r\n            });\r\n            let joinRequest = data.JoinRequests.splice(requestIndex, 1);\r\n            joinRequest[0].user_is_admin = 0;\r\n            data.Members.push(joinRequest[0]);\r\n            return { data: data };\r\n          });\r\n        } else if (memberState === 3) {\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  makeRevokeAdmin = (user_id, adminValue) => {\r\n    adminToggle(\r\n      this.state.token,\r\n      user_id,\r\n      this.state.data.Clan[0].id,\r\n      adminValue\r\n    )\r\n      .then(resolved => {\r\n        console.log(resolved);\r\n\r\n        this.setState(prevState => {\r\n          let data = { ...prevState.data };\r\n          let memberIndex = data.Members.findIndex(obj => {\r\n            return obj.id === user_id;\r\n          });\r\n          data.Members[memberIndex].user_is_admin = adminValue;\r\n\r\n          return { data: data };\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  removeMember = user_id => {\r\n    deleteMember(this.state.token, user_id, this.state.data.Clan[0].id)\r\n      .then(resolved => {\r\n        console.log(resolved);\r\n\r\n        this.setState(prevState => {\r\n          let data = { ...prevState.data };\r\n          let memberIndex = data.Members.findIndex(obj => {\r\n            return obj.id === user_id;\r\n          });\r\n          data.Members.splice(memberIndex, 1);\r\n          return { data: data };\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  updateClan = payload => {\r\n    updateClanFields(this.state.token, this.state.data.Clan[0].id, payload)\r\n      .then(resolved => {\r\n        console.log(resolved);\r\n\r\n        this.setState(prevState => {\r\n          let data = { ...prevState.data };\r\n          let keys = Object.keys(payload);\r\n          keys.forEach(k => {\r\n            data.Clan[0][k] = payload[k];\r\n          });\r\n\r\n          return { data: data };\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  removeBuy = dealId => {\r\n    deleteGroupBuy(this.state.token, this.state.data.Clan[0].id, dealId)\r\n      .then(resolved => {\r\n        console.log(resolved);\r\n        console.log(\"BUY ID = \", dealId);\r\n        this.setState(prevState => {\r\n          let data = { ...prevState.data };\r\n          let buyIndex = data.Buys.findIndex(obj => {\r\n            return obj.id === dealId;\r\n          });\r\n          console.log(buyIndex);\r\n          data.Buys.splice(buyIndex, 1);\r\n          return { data: data };\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  addNewNews = message => {\r\n    insertNews(this.state.token, this.state.data.Clan[0].id, message)\r\n      .then(resolved => {\r\n        console.log(resolved);\r\n        this.setState((prevState) => {\r\n          let data = { ...prevState.data };\r\n          data.News.unshift({ message: message });\r\n          return { data: data };\r\n        })\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div\r\n          id=\"mygroup-page\"\r\n          className=\"row row-border justify-content-center mb-4\"\r\n        >\r\n          <div id=\"main-content\" className=\"col spartan\">\r\n            {this.state.modal && (\r\n              <ItemView\r\n                modal={this.state.modal}\r\n                closeModal={this.closeModal}\r\n                options={GroupPageActions(\r\n                  this.state.token,\r\n                  this.state.user.id,\r\n                  this.state.data.Clan[0].id,\r\n                  this.state.modal,\r\n                  this.state.modalUpdate\r\n                )}\r\n              />\r\n            )}\r\n\r\n            <MyGroupHeader\r\n              sendJoinRequest={this.sendJoinRequest}\r\n              joinRequested={this.state.joinRequested}\r\n              data={this.state.data}\r\n              userIsMember={this.state.userIsMember}\r\n              leaveGroup={this.leaveGroup}\r\n              updateClan={this.updateClan}\r\n            />\r\n\r\n            <div className=\"row\">\r\n              <div id=\"mygroup-profile\" className=\"col-sm-12 col-lg-6 d-flex\">\r\n                {this.state.data && (\r\n                  <MyGroupProfile\r\n                    data={this.state.data}\r\n                    userIsMember={this.state.userIsMember}\r\n                    updateClan={this.updateClan}\r\n                  />\r\n                )}\r\n              </div>\r\n\r\n              <div id=\"mygroup-buys\" className=\"col-sm-12 col-lg-6 d-flex\">\r\n                <MyGroupBuys\r\n                  itemView={this.itemView}\r\n                  data={this.state.data}\r\n                  removeBuy={this.removeBuy}\r\n                  userIsMember={this.state.userIsMember}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mt-4\">\r\n              <div id=\"members-card\" className=\"col-sm-12 col-lg-6 d-flex\">\r\n                <MyGroupMembers\r\n                  data={this.state.data}\r\n                  user={this.state.user}\r\n                  memberRequest={this.memberRequest}\r\n                  userIsMember={this.state.userIsMember}\r\n                  makeRevokeAdmin={this.makeRevokeAdmin}\r\n                  removeMember={this.removeMember}\r\n                />\r\n              </div>\r\n              <div id=\"news-card\" className=\"col-sm-12 col-lg-6 d-flex\">\r\n                <MyGroupNews\r\n                  addNewNews={this.addNewNews}\r\n                  data={this.state.data}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(MyGroupPage);\r\n\r\nfunction fetchData(token, userid, ref) {\r\n  console.log(\"fetching data......\", token, userid);\r\n  return new Promise((resolve, reject) => {\r\n    let request = { userId: userid, clanId: ref };\r\n    let options = {\r\n      method: \"POST\",\r\n      headers: new Headers({\r\n        Authorization: \"Bearer \" + token,\r\n        \"Content-Type\": \"application/json\"\r\n      }),\r\n      body: JSON.stringify({\r\n        entity: request\r\n      })\r\n    };\r\n    fetch(\"/foodcommune/accounts/clanView\", options)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n      .then(res => {\r\n        console.log(res);\r\n        if (!res.success) {\r\n          // Return to account detail and display error message\r\n          resolve(res);\r\n        } else {\r\n          reject(\"Unable to retrieve data\");\r\n        }\r\n      });\r\n  });\r\n}\r\n\r\nfunction joinRequest(token, user, clanId) {\r\n  console.log(\"fetching data......\");\r\n  return new Promise((resolve, reject) => {\r\n    let request = { user: user, clanId: clanId };\r\n    let options = {\r\n      method: \"POST\",\r\n      headers: new Headers({\r\n        Authorization: \"Bearer \" + token,\r\n        \"Content-Type\": \"application/json\"\r\n      }),\r\n      body: JSON.stringify({\r\n        entity: request\r\n      })\r\n    };\r\n    fetch(\"/foodcommune/accounts/joinClanRequest\", options)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n      .then(res => {\r\n        console.log(res);\r\n        if (res.success) {\r\n          // Return to account detail and display error message\r\n          resolve(res);\r\n        } else {\r\n          reject(\"Unable to retrieve data\");\r\n        }\r\n      });\r\n  });\r\n}\r\n\r\nfunction removeUserFromGroup(token, user, clanId) {\r\n  console.log(\"fetching data......\");\r\n  return new Promise((resolve, reject) => {\r\n    let request = { user: user, clanId: clanId };\r\n    let options = {\r\n      method: \"POST\",\r\n      headers: new Headers({\r\n        Authorization: \"Bearer \" + token,\r\n        \"Content-Type\": \"application/json\"\r\n      }),\r\n      body: JSON.stringify({\r\n        entity: request\r\n      })\r\n    };\r\n    fetch(\"/foodcommune/accounts/removeUserFromClan\", options)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n      .then(res => {\r\n        console.log(res);\r\n        if (res.success) {\r\n          // Return to account detail and display error message\r\n          resolve(res);\r\n        } else {\r\n          reject(\"Unable to retrieve data\");\r\n        }\r\n      });\r\n  });\r\n}\r\n\r\nfunction handleMemberRequest(token, user, clanId, memberState) {\r\n  return new Promise((resolve, reject) => {\r\n    let request = { user: user, clanId: clanId, memberState: memberState };\r\n    let options = {\r\n      method: \"POST\",\r\n      headers: new Headers({\r\n        Authorization: \"Bearer \" + token,\r\n        \"Content-Type\": \"application/json\"\r\n      }),\r\n      body: JSON.stringify({\r\n        entity: request\r\n      })\r\n    };\r\n    fetch(\"/foodcommune/accounts/addUserToGroup\", options)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n      .then(res => {\r\n        console.log(res);\r\n        if (res.success) {\r\n          // Return to account detail and display error message\r\n          resolve(res);\r\n        } else {\r\n          reject(\"Unable to retrieve data\");\r\n        }\r\n      });\r\n  });\r\n}\r\n\r\nfunction adminToggle(token, user, clanId, adminValue) {\r\n  return new Promise((resolve, reject) => {\r\n    let request = { user: user, clanId: clanId, adminValue: adminValue };\r\n    let options = {\r\n      method: \"POST\",\r\n      headers: new Headers({\r\n        Authorization: \"Bearer \" + token,\r\n        \"Content-Type\": \"application/json\"\r\n      }),\r\n      body: JSON.stringify({\r\n        entity: request\r\n      })\r\n    };\r\n    fetch(\"/foodcommune/accounts/adminToggle\", options)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n      .then(res => {\r\n        console.log(res);\r\n        if (res.success) {\r\n          // Return to account detail and display error message\r\n          resolve(res);\r\n        } else {\r\n          reject(\"Unable to retrieve data\");\r\n        }\r\n      });\r\n  });\r\n}\r\n\r\nfunction deleteMember(token, user, clanId) {\r\n  return new Promise((resolve, reject) => {\r\n    let request = { user: user, clanId: clanId };\r\n    let options = {\r\n      method: \"POST\",\r\n      headers: new Headers({\r\n        Authorization: \"Bearer \" + token,\r\n        \"Content-Type\": \"application/json\"\r\n      }),\r\n      body: JSON.stringify({\r\n        entity: request\r\n      })\r\n    };\r\n    fetch(\"/foodcommune/accounts/deleteMember\", options)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n      .then(res => {\r\n        console.log(res);\r\n        if (res.success) {\r\n          // Return to account detail and display error message\r\n          resolve(res);\r\n        } else {\r\n          reject(\"Unable to retrieve data\");\r\n        }\r\n      });\r\n  });\r\n}\r\n\r\nfunction updateClanFields(token, clanId, payload) {\r\n  return new Promise((resolve, reject) => {\r\n    let request = { values: payload, clanId: clanId };\r\n    let options = {\r\n      method: \"POST\",\r\n      headers: new Headers({\r\n        Authorization: \"Bearer \" + token,\r\n        \"Content-Type\": \"application/json\"\r\n      }),\r\n      body: JSON.stringify({\r\n        entity: request\r\n      })\r\n    };\r\n    fetch(\"/foodcommune/accounts/updateClanFields\", options)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n      .then(res => {\r\n        console.log(res);\r\n        if (res.success) {\r\n          // Return to account detail and display error message\r\n          resolve(res);\r\n        } else {\r\n          reject(\"Unable to retrieve data\");\r\n        }\r\n      });\r\n  });\r\n}\r\n\r\nfunction deleteGroupBuy(token, clanId, dealId) {\r\n  return new Promise((resolve, reject) => {\r\n    let request = { clanId: clanId, dealId: dealId };\r\n    let options = {\r\n      method: \"POST\",\r\n      headers: new Headers({\r\n        Authorization: \"Bearer \" + token,\r\n        \"Content-Type\": \"application/json\"\r\n      }),\r\n      body: JSON.stringify({\r\n        entity: request\r\n      })\r\n    };\r\n    fetch(\"/foodcommune/accounts/deleteGroupBuy\", options)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n      .then(res => {\r\n        console.log(res);\r\n        if (res.success) {\r\n          // Return to account detail and display error message\r\n          resolve(res);\r\n        } else {\r\n          reject(\"Unable to retrieve data\");\r\n        }\r\n      });\r\n  });\r\n}\r\n\r\nfunction insertNews(token, clanId, message) {\r\n  return new Promise((resolve, reject) => {\r\n    let request = { clanId: clanId, message: message };\r\n    let options = {\r\n      method: \"POST\",\r\n      headers: new Headers({\r\n        Authorization: \"Bearer \" + token,\r\n        \"Content-Type\": \"application/json\"\r\n      }),\r\n      body: JSON.stringify({\r\n        entity: request\r\n      })\r\n    };\r\n    fetch(\"/foodcommune/accounts/insertNews\", options)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n      .then(res => {\r\n        console.log(res);\r\n        if (res.success) {\r\n          // Return to account detail and display error message\r\n          resolve(res);\r\n        } else {\r\n          reject(\"Unable to retrieve data\");\r\n        }\r\n      });\r\n  });\r\n}"]},"metadata":{},"sourceType":"module"}