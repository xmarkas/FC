{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\xmark\\\\Desktop\\\\Code\\\\Servers\\\\FC-SERVER\\\\food-commune\\\\src\\\\components\\\\ItemViewOption.jsx\";\nimport React from \"react\";\n\nfunction CatalogActions(token, userClans, userId, deal) {\n  let state = {\n    groupSelected: undefined\n  };\n\n  let addToGroup = list => {\n    let request = {\n      addType: list === \"mylist\" ? \"mylist\" : \"clan\",\n      userId: userId,\n      clanId: list === \"mylist\" ? null : list,\n      dealId: deal.id,\n      sellerId: deal.user_id\n    };\n    let options = {\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }),\n      body: JSON.stringify({\n        entity: request\n      })\n    };\n    fetch(\"/accounts/addDealTo\", options).then(res => {\n      return res.json();\n    }).then(res => {\n      console.log(res);\n\n      if (res.success) {\n        // Return to account detail and display error message\n        console.log(res);\n      } else {\n        console.log(\"Unable to retrieve data\");\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"dropdown dropleft\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    class: \"btn btn-sm btn-light dropdown-toggle\",\n    style: {\n      backgroundColor: \"#5a9026\",\n      fontSize: \"inherit\",\n      color: \"white\",\n      fontWeight: \"600\"\n    },\n    type: \"fc\",\n    id: \"dropdownMenuButton\",\n    \"data-toggle\": \"dropdown\",\n    \"aria-haspopup\": \"true\",\n    \"aria-expanded\": \"false\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-fc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }), \"Add To...\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"dropdown-menu\",\n    \"aria-labelledby\": \"dropdownMenuButton\",\n    style: {\n      backgroundColor: \"#346802\",\n      color: \"white\",\n      boxShadow: \"0px 0px 11px 3px rgba(0, 0, 0, 0.2)\",\n      fontSize: \"small\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-2\",\n    style: {\n      cursor: \"pointer\"\n    },\n    onClick: () => addToGroup(\"mylist\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, \"Wish List\"), userClans.map(c => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-2\",\n      style: {\n        cursor: \"pointer\"\n      },\n      \"list-value\": c.id,\n      onClick: ev => {\n        addToGroup(ev.target.getAttribute(\"list-value\"));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, c.name);\n  })))));\n}\n\nfunction GroupPageActions(token, userId, clanId, deal, update) {\n  let state = {\n    order_quantity: update ? update.purchase_units : 0\n  };\n\n  let placeOrder = () => {\n    let request = {\n      userId: userId,\n      clanId: clanId,\n      dealId: deal.id,\n      sellerId: deal.user_id,\n      purchaseUnits: state.order_quantity,\n      unitPrice: deal.price,\n      units: deal.units\n    };\n    let options = {\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }),\n      body: JSON.stringify({\n        entity: request\n      })\n    };\n    fetch(\"/accounts/groupPurchase\", options).then(res => {\n      return res.json();\n    }).then(res => {\n      console.log(res);\n\n      if (res.success) {\n        // Return to account detail and display error message\n        console.log(res);\n      } else {\n        console.log(\"Unable to retrieve data\");\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"space-evenly\",\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    style: {\n      display: \"flex\",\n      justifyContent: \"space-evenly\",\n      alignItems: \"center\",\n      margin: \"0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    style: {\n      marginRight: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, \"Quantity in pounds\"), /*#__PURE__*/React.createElement(\"input\", {\n    defaultValue: update ? update.purchase_units : 0,\n    onChange: ev => state.order_quantity = ev.target.value,\n    style: {\n      margin: \"0\",\n      width: \"75px\"\n    },\n    type: \"number\",\n    className: \"form-control\",\n    id: \"quantity\",\n    \"aria-describedby\": \"emailHelp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  })), !update ? /*#__PURE__*/React.createElement(\"button\", {\n    type: \"fc\",\n    className: \"btn btn-light\",\n    onClick: placeOrder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-fc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  }), \"Place my order\") : /*#__PURE__*/React.createElement(\"button\", {\n    type: \"fc\",\n    className: \"btn btn-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-fc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }), \"Update my order\"));\n}\n\nexport { CatalogActions, GroupPageActions };","map":{"version":3,"sources":["C:/Users/xmark/Desktop/Code/Servers/FC-SERVER/food-commune/src/components/ItemViewOption.jsx"],"names":["React","CatalogActions","token","userClans","userId","deal","state","groupSelected","undefined","addToGroup","list","request","addType","clanId","dealId","id","sellerId","user_id","options","method","headers","Headers","Authorization","body","JSON","stringify","entity","fetch","then","res","json","console","log","success","backgroundColor","fontSize","color","fontWeight","boxShadow","cursor","map","c","ev","target","getAttribute","name","GroupPageActions","update","order_quantity","purchase_units","placeOrder","purchaseUnits","unitPrice","price","units","display","alignItems","justifyContent","width","margin","marginRight","value"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nfunction CatalogActions(token, userClans, userId, deal) {\r\n  let state = {\r\n    groupSelected: undefined,\r\n  };\r\n\r\n  let addToGroup = (list) => {\r\n    let request = {\r\n      addType: list === \"mylist\" ? \"mylist\" : \"clan\",\r\n      userId: userId,\r\n      clanId: list === \"mylist\" ? null : list,\r\n      dealId: deal.id,\r\n      sellerId: deal.user_id,\r\n    };\r\n    let options = {\r\n      method: \"POST\",\r\n      headers: new Headers({\r\n        Authorization: \"Bearer \" + token,\r\n        \"Content-Type\": \"application/json\",\r\n      }),\r\n      body: JSON.stringify({\r\n        entity: request,\r\n      }),\r\n    };\r\n    fetch(\"/accounts/addDealTo\", options)\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.success) {\r\n          // Return to account detail and display error message\r\n          console.log(res);\r\n        } else {\r\n          console.log(\"Unable to retrieve data\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"col\">\r\n        <div class=\"dropdown dropleft\">\r\n          <button\r\n            class=\"btn btn-sm btn-light dropdown-toggle\"\r\n            style={{\r\n              backgroundColor: \"#5a9026\",\r\n              fontSize: \"inherit\",\r\n              color: \"white\",\r\n              fontWeight: \"600\",\r\n            }}\r\n            type=\"fc\"\r\n            id=\"dropdownMenuButton\"\r\n            data-toggle=\"dropdown\"\r\n            aria-haspopup=\"true\"\r\n            aria-expanded=\"false\"\r\n          >\r\n            <div className=\"btn-fc\"></div>\r\n            Add To...\r\n          </button>\r\n          <div\r\n            class=\"dropdown-menu\"\r\n            aria-labelledby=\"dropdownMenuButton\"\r\n            style={{\r\n              backgroundColor: \"#346802\",\r\n              color: \"white\",\r\n              boxShadow: \"0px 0px 11px 3px rgba(0, 0, 0, 0.2)\",\r\n              fontSize: \"small\",\r\n            }}\r\n          >\r\n            <div\r\n              className=\"p-2\"\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={() => addToGroup(\"mylist\")}\r\n            >\r\n              Wish List\r\n            </div>\r\n            {userClans.map((c) => {\r\n              return (\r\n                <div\r\n                  className=\"p-2\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                  list-value={c.id}\r\n                  onClick={(ev) => {\r\n                    addToGroup(ev.target.getAttribute(\"list-value\"));\r\n                  }}\r\n                >\r\n                  {c.name}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nfunction GroupPageActions(token, userId, clanId, deal, update) {\r\n  let state = {\r\n    order_quantity: update ? update.purchase_units : 0,\r\n  };\r\n\r\n  let placeOrder = () => {\r\n    let request = {\r\n      userId: userId,\r\n      clanId: clanId,\r\n      dealId: deal.id,\r\n      sellerId: deal.user_id,\r\n      purchaseUnits: state.order_quantity,\r\n      unitPrice: deal.price,\r\n      units: deal.units,\r\n    };\r\n    let options = {\r\n      method: \"POST\",\r\n      headers: new Headers({\r\n        Authorization: \"Bearer \" + token,\r\n        \"Content-Type\": \"application/json\",\r\n      }),\r\n      body: JSON.stringify({\r\n        entity: request,\r\n      }),\r\n    };\r\n    fetch(\"/accounts/groupPurchase\", options)\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.success) {\r\n          // Return to account detail and display error message\r\n          console.log(res);\r\n        } else {\r\n          console.log(\"Unable to retrieve data\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-evenly\",\r\n        width: \"100%\",\r\n      }}\r\n    >\r\n      <div\r\n        className=\"form-group\"\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-evenly\",\r\n          alignItems: \"center\",\r\n          margin: \"0\",\r\n        }}\r\n      >\r\n        <label style={{ marginRight: \"5px\" }}>Quantity in pounds</label>\r\n        <input\r\n          defaultValue={update ? update.purchase_units : 0}\r\n          onChange={(ev) => (state.order_quantity = ev.target.value)}\r\n          style={{ margin: \"0\", width: \"75px\" }}\r\n          type=\"number\"\r\n          className=\"form-control\"\r\n          id=\"quantity\"\r\n          aria-describedby=\"emailHelp\"\r\n        ></input>\r\n      </div>\r\n      {!update ? (\r\n        <button type=\"fc\" className=\"btn btn-light\" onClick={placeOrder}>\r\n          <div className=\"btn-fc\"></div>Place my order\r\n        </button>\r\n      ) : (\r\n        <button type=\"fc\" className=\"btn btn-light\">\r\n          <div className=\"btn-fc\"></div>Update my order\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { CatalogActions, GroupPageActions };\r\n"]},"metadata":{},"sourceType":"module"}