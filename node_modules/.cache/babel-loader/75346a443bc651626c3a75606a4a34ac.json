{"ast":null,"code":"\"use strict\"; // let Search = new SearchBar();\n\nvar _jsxFileName = \"C:\\\\Users\\\\xmark\\\\Desktop\\\\Code\\\\Servers\\\\Qumoc\\\\food-commune\\\\src\\\\components\\\\CatalogView.jsx\";\n\nclass CatalogView extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchInput: \"\",\n      modal: null,\n      data: null\n    };\n\n    this.viewData = () => {\n      if (this.state.token && this.state.user) {\n        getUserClans(this.state.token, this.state.user.id).then(resolved => {\n          console.log(resolved);\n          this.setState({\n            userClans: resolved.MyClans\n          });\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    };\n\n    this.setToken = token => {\n      this.setState({\n        token: token\n      });\n    };\n\n    this.setUser = user => {\n      this.setState({\n        user: user\n      });\n    };\n\n    this.onSearch = ev => {\n      let value = ev.target.value;\n      this.setState({\n        searchInput: value\n      });\n    };\n\n    this.itemView = itemIndex => {\n      console.log(itemIndex);\n      this.setState({\n        modal: this.state.data.Deals[itemIndex]\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState({\n        modal: null\n      });\n    };\n  }\n\n  componentWillMount() {\n    let data = getCatalog().then(resolved => {\n      console.log(\"DATAAA\", resolved);\n      this.setState({\n        data: resolved\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n  /****************************************************\r\n   * Component Data\r\n   */\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"nav-view\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(NavView, {\n      setToken: this.setToken,\n      setUser: this.setUser,\n      viewData: this.viewData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, this.state.modal && /*#__PURE__*/React.createElement(ItemView, {\n      modal: this.state.modal,\n      closeModal: this.closeModal,\n      options: CatalogActions(this.state.token, this.state.userClans, this.state.user.id, this.state.modal) //modal as Deal\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"catalog\",\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(SearchBar, {\n      onSearch: this.onSearch,\n      placeHolderVal: rndPlaceHolder(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }), this.state.data && /*#__PURE__*/React.createElement(Catalog, {\n      searchValue: this.state.searchInput,\n      itemView: this.itemView,\n      data: this.state.data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    }))));\n  }\n\n}\n\nlet domContainer = document.querySelector(\"#wrapper\");\nReactDOM.render( /*#__PURE__*/React.createElement(CatalogView, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 17\n  }\n}), domContainer);\n\nfunction rndPlaceHolder() {\n  let time = new Date().getTime();\n\n  if (time % 2 === 0) {\n    return \"What are you looking for?\";\n  } else if (time % 3 === 0) {\n    return \"Carrots, Apples, Tomatoes...\";\n  } else {\n    return \"Strawberries, Onions, Broccoli..\";\n  }\n}\n\nfunction getCatalog() {\n  return new Promise((resolve, reject) => {\n    let options = {\n      method: \"GET\"\n    };\n    fetch(\"https://qumoc.com/foodcommune/site/catalog\", options).then(res => {\n      return res.json();\n    }).then(res => {\n      if (res) {\n        console.log(res);\n        resolve(res);\n      } else {\n        console.log(\"Unable to retrieve data\");\n        reject(\"Did not load\");\n      }\n    });\n  });\n}\n\nfunction getUserClans(token, userId) {\n  return new Promise((resolve, reject) => {\n    let request = {\n      userId: userId\n    };\n    let options = {\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }),\n      body: JSON.stringify({\n        entity: request\n      })\n    };\n    fetch(\"/foodcommune/accounts/userClans\", options).then(res => {\n      return res.json();\n    }).then(res => {\n      console.log(res);\n\n      if (res) {\n        // Return to account detail and display error message\n        resolve(res);\n      } else {\n        reject(\"Unable to retrieve data\");\n      }\n    });\n  });\n}","map":{"version":3,"sources":["C:/Users/xmark/Desktop/Code/Servers/Qumoc/food-commune/src/components/CatalogView.jsx"],"names":["CatalogView","React","Component","state","searchInput","modal","data","viewData","token","user","getUserClans","id","then","resolved","console","log","setState","userClans","MyClans","catch","err","setToken","setUser","onSearch","ev","value","target","itemView","itemIndex","Deals","closeModal","componentWillMount","getCatalog","render","CatalogActions","rndPlaceHolder","domContainer","document","querySelector","ReactDOM","time","Date","getTime","Promise","resolve","reject","options","method","fetch","res","json","userId","request","headers","Headers","Authorization","body","JSON","stringify","entity"],"mappings":"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","sourcesContent":["\"use strict\";\r\n// let Search = new SearchBar();\r\n\r\nclass CatalogView extends React.Component {\r\n  state = {\r\n    searchInput: \"\",\r\n    modal: null,\r\n    data: null\r\n  };\r\n\r\n  componentWillMount() {\r\n    let data = getCatalog()\r\n      .then(resolved => {\r\n        console.log(\"DATAAA\", resolved);\r\n        this.setState({ data: resolved });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  /****************************************************\r\n   * Component Data\r\n   */\r\n  viewData = () => {\r\n    if (this.state.token && this.state.user) {\r\n      getUserClans(this.state.token, this.state.user.id)\r\n        .then(resolved => {\r\n          console.log(resolved);\r\n          this.setState({ userClans: resolved.MyClans });\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  setToken = token => {\r\n    this.setState({ token: token });\r\n  };\r\n\r\n  setUser = user => {\r\n    this.setState({ user: user });\r\n  };\r\n  /*************************************************** */\r\n\r\n  onSearch = ev => {\r\n    let value = ev.target.value;\r\n\r\n    this.setState({ searchInput: value });\r\n  };\r\n\r\n  itemView = itemIndex => {\r\n    console.log(itemIndex);\r\n    this.setState({ modal: this.state.data.Deals[itemIndex] });\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.setState({ modal: null });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {/* <!-- Navigation --> */}\r\n        <div id=\"nav-view\">\r\n          <NavView\r\n            setToken={this.setToken}\r\n            setUser={this.setUser}\r\n            viewData={this.viewData}\r\n          />\r\n        </div>\r\n\r\n        {/* <!-- Main Content --> */}\r\n        <div className=\"row\">\r\n          {this.state.modal && (\r\n            <ItemView\r\n              modal={this.state.modal}\r\n              closeModal={this.closeModal}\r\n              options={CatalogActions(this.state.token, this.state.userClans, this.state.user.id, this.state.modal)} //modal as Deal\r\n            />\r\n          )}\r\n          <div id=\"catalog\" className=\"col\">\r\n            <SearchBar\r\n              onSearch={this.onSearch}\r\n              placeHolderVal={rndPlaceHolder()}\r\n            />\r\n            {this.state.data && (\r\n              <Catalog\r\n                searchValue={this.state.searchInput}\r\n                itemView={this.itemView}\r\n                data={this.state.data}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nlet domContainer = document.querySelector(\"#wrapper\");\r\nReactDOM.render(<CatalogView />, domContainer);\r\n\r\nfunction rndPlaceHolder() {\r\n  let time = new Date().getTime();\r\n\r\n  if (time % 2 === 0) {\r\n    return \"What are you looking for?\";\r\n  } else if (time % 3 === 0) {\r\n    return \"Carrots, Apples, Tomatoes...\";\r\n  } else {\r\n    return \"Strawberries, Onions, Broccoli..\";\r\n  }\r\n}\r\n\r\nfunction getCatalog() {\r\n  return new Promise((resolve, reject) => {\r\n    let options = {\r\n      method: \"GET\"\r\n      \r\n    };\r\n    fetch(\"https://qumoc.com/foodcommune/site/catalog\", options)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n      .then(res => {\r\n        if (res) {\r\n          console.log(res);\r\n          resolve(res);\r\n        } else {\r\n          console.log(\"Unable to retrieve data\");\r\n          reject(\"Did not load\");\r\n        }\r\n      });\r\n  });\r\n}\r\n\r\nfunction getUserClans(token, userId) {\r\n  return new Promise((resolve, reject) => {\r\n    let request = { userId: userId };\r\n    let options = {\r\n      method: \"POST\",\r\n      headers: new Headers({\r\n        Authorization: \"Bearer \" + token,\r\n        \"Content-Type\": \"application/json\"\r\n      }),\r\n      body: JSON.stringify({\r\n        entity: request\r\n      })\r\n    };\r\n    fetch(\"/foodcommune/accounts/userClans\", options)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n      .then(res => {\r\n        console.log(res);\r\n        if (res) {\r\n          // Return to account detail and display error message\r\n          resolve(res);\r\n        } else {\r\n          reject(\"Unable to retrieve data\");\r\n        }\r\n      });\r\n  });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}