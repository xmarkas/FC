{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\xmark\\\\Desktop\\\\Code\\\\Servers\\\\Qumoc\\\\food-commune\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\xmark\\\\Desktop\\\\Code\\\\Servers\\\\Qumoc\\\\food-commune\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\xmark\\\\Desktop\\\\Code\\\\Servers\\\\Qumoc\\\\food-commune\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\xmark\\\\Desktop\\\\Code\\\\Servers\\\\Qumoc\\\\food-commune\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import{Link}from\"react-router-dom\";var PasswordReset=/*#__PURE__*/function(_Component){_inherits(PasswordReset,_Component);var _super=_createSuper(PasswordReset);function PasswordReset(){var _this;_classCallCheck(this,PasswordReset);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={formHeader:\"Password Reset\",formError:null,recoverInput:undefined,userFound:false,password1:undefined,password2:undefined,vCode:undefined,vCodeInput:undefined};_this.resetGo=function(){var input=_this.state.recoverInput;if(input===undefined){_this.setState({formError:\"No input entered\"});}else{// parse for email or phone\nif(input.includes(\"@\")&&input.includes(\".\")){console.log(\"email\");input.trim();getUser(\"profile.email eq \\\"\".concat(input,\"\\\"\"));}else{var format=input.replace(/\\W/g,\"\");format=format[0]==1?format.substring(1):format;if(isNaN(format)){_this.setState({formError:\"Input is neither a phone number or email\"});}else if(format.length<9||format.length>11){_this.setState({formError:\"Not a valid phone number\"});}else{console.log(\"phone\",format);getUser(\"profile.mobilePhone eq \\\"\".concat(format,\"\\\"\"));}}}};_this.getUser=function(query){var options={method:\"GET\",mode:\"same-origin\",credentials:\"same-origin\",headers:{\"Content-Type\":\"application/json\"}};fetch(\"/foodcommune/site/finduser?queryparams=\".concat(query),options).then(function(res){if(res)return res.json();}).then(function(res){console.log(res);_this.startChangePasswordFlow(res.login,res.phone);}).catch(function(err){console.log(err);});};_this.startChangePasswordFlow=function(login,phone){// Toggle view\n_this.setState({userFound:true});// Generate 5 digit-verification code\nvar verificaiton=Math.floor(Math.random()*10000)*new Date().getTime();var digits=verificaiton.toString().substr(0,5);_this.setState({vCode:digits,login:login});// Send digits to profile creator\nvar options={method:\"POST\",mode:\"same-origin\",credentials:\"same-origin\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({entity:{phone:phone,code:digits}})};fetch(\"/foodcommune/site/verify\",options).then(function(res){if(res)return res.json();}).then(function(res){console.log(res);}).catch(function(err){console.log(err);});};_this.setPassword=function(){// Verification code match\nif(_this.state.vCode!=_this.state.vCodeInput){_this.setState({formError:\"5-digit code does not match!\"});return;}// Verify password match\nif(_this.state.password1!==_this.state.password2){_this.setState({formError:\"Passwords do not match. Please re-type passwords\"});return;// Stop account flow\n}else{_this.setState({formError:null});}// Verify password length\nif(_this.state.password1.length<8){_this.setState({formError:\"Passwords must be at least 8 characters!\"});return;}// Send request to Okta to change the password on the users account\nvar options={method:\"POST\",mode:\"same-origin\",credentials:\"same-origin\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({entity:{login:_this.state.login,newPassword:_this.state.password1}})};fetch(\"/foodcommune/site/changepassword\",options).then(function(res){if(res)return res.json();}).then(function(res){if(!res.res){_this.setState({formError:res.msg});}else{_this.setState({formHeader:\"Your password has been reset!\"});setTimeout(function(){/*#__PURE__*/React.createElement(Link,{to:\"/foodcommune\"});},3000);}}).catch(function(err){console.log(err);});};return _this;}_createClass(PasswordReset,[{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/ (// <!-- ROW -->\nReact.createElement(\"div\",{id:\"main-content\",className:\"row row-border justify-content-center py-5\",style:{position:\"relative\"}},this.state.userFound&&/*#__PURE__*/React.createElement(\"div\",{id:\"login-help\",className:\"col spartan\"},/*#__PURE__*/React.createElement(\"div\",{className:\"row justify-content-center\"},this.state.formHeader),/*#__PURE__*/React.createElement(\"div\",{className:\"row py-4 justify-content-center\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-4\"},/*#__PURE__*/React.createElement(\"div\",{style:{borderRadius:\"5px\",padding:\"20px\",backgroundColor:\"white\",fontSize:\"small\"}},/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{for:\"recover-input\"},\"Enter an email or phone number associated with the account.\"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"form-control\",id:\"recover-input\",placeholder:\"email or phone\",onChange:function onChange(ev){_this2.setState({recoverInput:ev.target.value});}}),/*#__PURE__*/React.createElement(\"small\",{className:\"text-muted\"},\"Phone numbers do not require special characters (\\\"-\\\" or \\\"()\\\")\")),/*#__PURE__*/React.createElement(\"button\",{id:\"recover-go\",className:\"btn btn-success\",onClick:this.resetGo},\"Reset\"),/*#__PURE__*/React.createElement(\"div\",{id:\"form-error\",className:\"spartan pt-2\",style:\"font-size: x-small; color: red; text-align: center;\"}))))),!this.state.userFound&&/*#__PURE__*/React.createElement(\"div\",{id:\"change-password\",className:\"col spartan\"},/*#__PURE__*/React.createElement(\"div\",{className:\"row justify-content-center\"},\"Create New Password\"),/*#__PURE__*/React.createElement(\"div\",{className:\"row py-4 justify-content-center\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-4\"},/*#__PURE__*/React.createElement(\"div\",{style:{borderRadius:\"5px\",padding:\"20px\",backgroundColor:\"white\",fontSize:\"small\"}},/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{for:\"InputPassword1\"},\"Create Password\"),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"small\",{className:\"text-muted\"},\"Must be least 8 characters, a lowercase letter, an uppercase letter, a number, no parts of your username.\")),/*#__PURE__*/React.createElement(\"input\",{type:\"password\",className:\"form-control\",id:\"InputPassword1\",onChange:function onChange(ev){_this2.setState({password1:ev.target.value});}})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{for:\"InputPassword2\"},\"Re-type Password\"),/*#__PURE__*/React.createElement(\"input\",{type:\"password\",className:\"form-control\",id:\"InputPassword2\",onChange:function onChange(ev){_this2.setState({password2:ev.target.value});}})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{for:\"v-code\"},\"5-digit verification code\"),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"small\",{className:\"text-muted\"},\"Sent to phone number associated with your account.\")),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"form-control\",id:\"v-code\",onChange:function onChange(ev){_this2.setState({vCodeInput:ev.target.value});},style:{width:\"100px\"}})),/*#__PURE__*/React.createElement(\"button\",{id:\"set-password-go\",className:\"btn btn-success\",onClick:this.setPassword},\"Change password\"),this.state.recoverInput&&/*#__PURE__*/React.createElement(\"div\",{id:\"password-form-error\",className:\"spartan pt-2\",style:{fontSize:\"x-small\",color:\"red\",textAlign:\"center\"}},this.state.recoverInput)))))));}}]);return PasswordReset;}(Component);export default PasswordReset;","map":{"version":3,"sources":["C:/Users/xmark/Desktop/Code/Servers/Qumoc/food-commune/src/components/PasswordReset.jsx"],"names":["React","Component","Link","PasswordReset","state","formHeader","formError","recoverInput","undefined","userFound","password1","password2","vCode","vCodeInput","resetGo","input","setState","includes","console","log","trim","getUser","format","replace","substring","isNaN","length","query","options","method","mode","credentials","headers","fetch","then","res","json","startChangePasswordFlow","login","phone","catch","err","verificaiton","Math","floor","random","Date","getTime","digits","toString","substr","body","JSON","stringify","entity","code","setPassword","newPassword","msg","setTimeout","position","borderRadius","padding","backgroundColor","fontSize","ev","target","value","width","color","textAlign"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass PasswordReset extends Component {\r\n  state = {\r\n    formHeader: \"Password Reset\",\r\n    formError: null,\r\n    recoverInput: undefined,\r\n    userFound: false,\r\n    password1: undefined,\r\n    password2: undefined,\r\n    vCode: undefined,\r\n    vCodeInput: undefined\r\n  };\r\n\r\n  resetGo = () => {\r\n    let input = this.state.recoverInput;\r\n    if (input === undefined) {\r\n      this.setState({ formError: \"No input entered\" });\r\n    } else {\r\n      // parse for email or phone\r\n      if (input.includes(\"@\") && input.includes(\".\")) {\r\n        console.log(\"email\");\r\n        input.trim();\r\n        getUser(`profile.email eq \"${input}\"`);\r\n      } else {\r\n        let format = input.replace(/\\W/g, \"\");\r\n        format = format[0] == 1 ? format.substring(1) : format;\r\n        if (isNaN(format)) {\r\n          this.setState({\r\n            formError: \"Input is neither a phone number or email\"\r\n          });\r\n        } else if (format.length < 9 || format.length > 11) {\r\n          this.setState({ formError: \"Not a valid phone number\" });\r\n        } else {\r\n          console.log(\"phone\", format);\r\n          getUser(`profile.mobilePhone eq \"${format}\"`);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  getUser = query => {\r\n    let options = {\r\n      method: \"GET\",\r\n      mode: \"same-origin\",\r\n      credentials: \"same-origin\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    };\r\n\r\n    fetch(`/foodcommune/site/finduser?queryparams=${query}`, options)\r\n      .then(res => {\r\n        if (res) return res.json();\r\n      })\r\n      .then(res => {\r\n        console.log(res);\r\n        this.startChangePasswordFlow(res.login, res.phone);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  startChangePasswordFlow = (login, phone) => {\r\n    // Toggle view\r\n    this.setState({ userFound: true });\r\n    // Generate 5 digit-verification code\r\n    let verificaiton = Math.floor(Math.random() * 10000) * new Date().getTime();\r\n    let digits = verificaiton.toString().substr(0, 5);\r\n    this.setState({ vCode: digits, login: login });\r\n\r\n    // Send digits to profile creator\r\n    let options = {\r\n      method: \"POST\",\r\n      mode: \"same-origin\",\r\n      credentials: \"same-origin\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({ entity: { phone: phone, code: digits } })\r\n    };\r\n\r\n    fetch(\"/foodcommune/site/verify\", options)\r\n      .then(res => {\r\n        if (res) return res.json();\r\n      })\r\n      .then(res => {\r\n        console.log(res);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  setPassword = () => {\r\n    // Verification code match\r\n    if (this.state.vCode != this.state.vCodeInput) {\r\n      this.setState({ formError: \"5-digit code does not match!\" });\r\n      return;\r\n    }\r\n\r\n    // Verify password match\r\n    if (this.state.password1 !== this.state.password2) {\r\n      this.setState({\r\n        formError: \"Passwords do not match. Please re-type passwords\"\r\n      });\r\n      return; // Stop account flow\r\n    } else {\r\n      this.setState({ formError: null });\r\n    }\r\n\r\n    // Verify password length\r\n    if (this.state.password1.length < 8) {\r\n      this.setState({ formError: \"Passwords must be at least 8 characters!\" });\r\n      return;\r\n    }\r\n\r\n    // Send request to Okta to change the password on the users account\r\n    let options = {\r\n      method: \"POST\",\r\n      mode: \"same-origin\",\r\n      credentials: \"same-origin\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        entity: { login: this.state.login, newPassword: this.state.password1 }\r\n      })\r\n    };\r\n\r\n    fetch(\"/foodcommune/site/changepassword\", options)\r\n      .then(res => {\r\n        if (res) return res.json();\r\n      })\r\n      .then(res => {\r\n        if (!res.res) {\r\n          this.setState({ formError: res.msg });\r\n        } else {\r\n          this.setState({ formHeader: \"Your password has been reset!\" });\r\n          setTimeout(() => {\r\n            <Link to=\"/foodcommune\"></Link>;\r\n          }, 3000);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      // <!-- ROW -->\r\n      <div\r\n        id=\"main-content\"\r\n        className=\"row row-border justify-content-center py-5\"\r\n        style={{ position: \"relative\" }}\r\n      >\r\n        {/* Enter phone or email */}\r\n        {this.state.userFound && (\r\n          <div id=\"login-help\" className=\"col spartan\">\r\n            <div className=\"row justify-content-center\">\r\n              {this.state.formHeader}\r\n            </div>\r\n            <div className=\"row py-4 justify-content-center\">\r\n              <div className=\"col-md-4\">\r\n                <div\r\n                  style={{\r\n                    borderRadius: \"5px\",\r\n                    padding: \"20px\",\r\n                    backgroundColor: \"white\",\r\n                    fontSize: \"small\"\r\n                  }}\r\n                >\r\n                  {/* <!-- email or phone number --> */}\r\n                  <div className=\"form-group\">\r\n                    <label for=\"recover-input\">\r\n                      Enter an email or phone number associated with the\r\n                      account.\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      id=\"recover-input\"\r\n                      placeholder=\"email or phone\"\r\n                      onChange={ev => {\r\n                        this.setState({ recoverInput: ev.target.value });\r\n                      }}\r\n                    ></input>\r\n                    <small className=\"text-muted\">\r\n                      Phone numbers do not require special characters (\"-\" or\r\n                      \"()\")\r\n                    </small>\r\n                  </div>\r\n                  <button\r\n                    id=\"recover-go\"\r\n                    className=\"btn btn-success\"\r\n                    onClick={this.resetGo}\r\n                  >\r\n                    Reset\r\n                  </button>\r\n                  <div\r\n                    id=\"form-error\"\r\n                    className=\"spartan pt-2\"\r\n                    style=\"font-size: x-small; color: red; text-align: center;\"\r\n                  ></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        {/* Enter New password and 5 digit code */}\r\n        {!this.state.userFound && (\r\n          <div id=\"change-password\" className=\"col spartan\">\r\n            <div className=\"row justify-content-center\">\r\n              Create New Password\r\n            </div>\r\n            <div className=\"row py-4 justify-content-center\">\r\n              <div className=\"col-md-4\">\r\n                <div\r\n                  style={{\r\n                    borderRadius: \"5px\",\r\n                    padding: \"20px\",\r\n                    backgroundColor: \"white\",\r\n                    fontSize: \"small\"\r\n                  }}\r\n                >\r\n                  {/* <!-- password --> */}\r\n                  <div className=\"form-group\">\r\n                    <label for=\"InputPassword1\">Create Password</label>\r\n                    <div>\r\n                      <small className=\"text-muted\">\r\n                        Must be least 8 characters, a lowercase letter, an\r\n                        uppercase letter, a number, no parts of your username.\r\n                      </small>\r\n                    </div>\r\n                    <input\r\n                      type=\"password\"\r\n                      className=\"form-control\"\r\n                      id=\"InputPassword1\"\r\n                      onChange={ev => {\r\n                        this.setState({ password1: ev.target.value });\r\n                      }}\r\n                    ></input>\r\n                  </div>\r\n                  {/* <!-- password verify--> */}\r\n                  <div className=\"form-group\">\r\n                    <label for=\"InputPassword2\">Re-type Password</label>\r\n                    <input\r\n                      type=\"password\"\r\n                      className=\"form-control\"\r\n                      id=\"InputPassword2\"\r\n                      onChange={ev => {\r\n                        this.setState({ password2: ev.target.value });\r\n                      }}\r\n                    ></input>\r\n                  </div>\r\n                  {/* <!-- Verificaiton code--> */}\r\n                  <div className=\"form-group\">\r\n                    <label for=\"v-code\">5-digit verification code</label>\r\n                    <div>\r\n                      <small className=\"text-muted\">\r\n                        Sent to phone number associated with your account.\r\n                      </small>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      id=\"v-code\"\r\n                      onChange={ev => {\r\n                        this.setState({ vCodeInput: ev.target.value });\r\n                      }}\r\n                      style={{ width: \"100px\" }}\r\n                    ></input>\r\n                  </div>\r\n                  <button\r\n                    id=\"set-password-go\"\r\n                    className=\"btn btn-success\"\r\n                    onClick={this.setPassword}\r\n                  >\r\n                    Change password\r\n                  </button>\r\n                  {this.state.recoverInput && (\r\n                    <div\r\n                      id=\"password-form-error\"\r\n                      className=\"spartan pt-2\"\r\n                      style={{\r\n                        fontSize: \"x-small\",\r\n                        color: \"red\",\r\n                        textAlign: \"center\"\r\n                      }}\r\n                    >\r\n                      {this.state.recoverInput}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PasswordReset;\r\n"]},"metadata":{},"sourceType":"module"}