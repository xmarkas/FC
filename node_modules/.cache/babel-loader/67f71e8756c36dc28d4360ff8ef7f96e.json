{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\xmark\\\\Desktop\\\\Code\\\\Servers\\\\Qumoc\\\\food-commune\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\xmark\\\\Desktop\\\\Code\\\\Servers\\\\Qumoc\\\\food-commune\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\xmark\\\\Desktop\\\\Code\\\\Servers\\\\Qumoc\\\\food-commune\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\xmark\\\\Desktop\\\\Code\\\\Servers\\\\Qumoc\\\\food-commune\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import{Link}from\"react-router-dom\";import{signInAuthenticate}from\"../util/okta\";var SignIn=/*#__PURE__*/function(_Component){_inherits(SignIn,_Component);var _super=_createSuper(SignIn);function SignIn(){var _this;_classCallCheck(this,SignIn);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={email:\"\",password:\"\",errMsg:\"\"};_this.closeSignInWindow=function(ev){if(ev.target.id===\"sign-in-wrapper\")_this.props.signIn();};_this.inputEmail=function(ev){_this.setState({email:ev.target.value});};_this.inputPassword=function(ev){_this.setState({password:ev.target.value});};_this.signInFlow=function(){signInAuthenticate(_this.state.email,_this.state.password);};return _this;}_createClass(SignIn,[{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/ (// <!-- Sign In  -->\nReact.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{// id=\"sign-in-wrapper\"\n// className={this.props.signInToggle ? \"show-sign-in\" : \"\"}\nonClick:function onClick(ev){return _this2.closeSignInWindow(ev);}},/*#__PURE__*/React.createElement(\"div\",{id:\"sign-in\"},/*#__PURE__*/React.createElement(\"div\",{class:\"spinner-border text-info\",role:\"status\"},/*#__PURE__*/React.createElement(\"span\",{class:\"sr-only\"},\"Loading...\")),/*#__PURE__*/React.createElement(\"div\",{className:\"header spartan\"},/*#__PURE__*/React.createElement(\"img\",{width:\"40px\",src:require(\"../media/logoAlpha.gif\"),alt:\"\"}),/*#__PURE__*/React.createElement(\"div\",null,\"Sign In\")),/*#__PURE__*/React.createElement(\"div\",{className:\"content spartan\"},/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\"Email\"),/*#__PURE__*/React.createElement(\"input\",{onChange:function onChange(ev){return _this2.inputEmail(ev);},type:\"email\",className:\"form-control\",id:\"sign-in-email\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\"Password\"),/*#__PURE__*/React.createElement(\"input\",{onChange:function onChange(ev){return _this2.inputPassword(ev);},onKeyDown:function onKeyDown(ev){if(ev.keyCode===13)_this2.signInFlow();},type:\"password\",className:\"form-control\",id:\"sign-in-password\"})),/*#__PURE__*/React.createElement(\"button\",{id:\"signin-go\",className:\"btn btn-primary\",onClick:this.signInFlow},\"Log In\"),/*#__PURE__*/React.createElement(\"div\",{id:\"sign-in-form-error\",className:\"spartan pt-2\",style:{fontSize:\"x-small\",color:\"red\",textAlign:\"center\"}},this.state.errMsg),/*#__PURE__*/React.createElement(\"div\",{id:\"password-reset\",className:\"py-1\"},/*#__PURE__*/React.createElement(\"small\",{style:{fontWeight:\"500\",cursor:\"pointer\"}},/*#__PURE__*/React.createElement(Link,{to:\"/foodcommune/passwordreset\",className:\"link-gray\"},\"Reset Password\"))))))));}}]);return SignIn;}(Component);export default SignIn;","map":{"version":3,"sources":["C:/Users/xmark/Desktop/Code/Servers/Qumoc/food-commune/src/components/SignIn.jsx"],"names":["React","Component","Link","signInAuthenticate","SignIn","state","email","password","errMsg","closeSignInWindow","ev","target","id","props","signIn","inputEmail","setState","value","inputPassword","signInFlow","require","keyCode","fontSize","color","textAlign","fontWeight","cursor"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { signInAuthenticate } from \"../util/okta\";\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    errMsg: \"\"\r\n  };\r\n\r\n  closeSignInWindow = ev => {\r\n    if (ev.target.id === \"sign-in-wrapper\") this.props.signIn();\r\n  };\r\n\r\n  inputEmail = ev => {\r\n    this.setState({ email: ev.target.value });\r\n  };\r\n\r\n  inputPassword = ev => {\r\n    this.setState({ password: ev.target.value });\r\n  };\r\n\r\n  signInFlow = () => {\r\n    signInAuthenticate(this.state.email, this.state.password);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      // <!-- Sign In  -->\r\n\r\n      <React.Fragment>\r\n        <div\r\n          // id=\"sign-in-wrapper\"\r\n          // className={this.props.signInToggle ? \"show-sign-in\" : \"\"}\r\n          onClick={ev => this.closeSignInWindow(ev)}\r\n        >\r\n          <div id=\"sign-in\">\r\n            <div class=\"spinner-border text-info\" role=\"status\">\r\n              <span class=\"sr-only\">Loading...</span>\r\n            </div>\r\n            <div className=\"header spartan\">\r\n              <img\r\n                width=\"40px\"\r\n                src={require(\"../media/logoAlpha.gif\")}\r\n                alt=\"\"\r\n              />\r\n              <div>Sign In</div>\r\n            </div>\r\n            <div className=\"content spartan\">\r\n              {/* <!-- email --> */}\r\n              <div className=\"form-group\">\r\n                <label>Email</label>\r\n                <input\r\n                  onChange={ev => this.inputEmail(ev)}\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  id=\"sign-in-email\"\r\n                ></input>\r\n              </div>\r\n              {/* <!-- password --> */}\r\n              <div className=\"form-group\">\r\n                <label>Password</label>\r\n                <input\r\n                  onChange={ev => this.inputPassword(ev)}\r\n                  onKeyDown={ev => {\r\n                    if (ev.keyCode === 13) this.signInFlow();\r\n                  }}\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"sign-in-password\"\r\n                ></input>\r\n              </div>\r\n              <button\r\n                id=\"signin-go\"\r\n                className=\"btn btn-primary\"\r\n                onClick={this.signInFlow}\r\n              >\r\n                Log In\r\n              </button>\r\n\r\n              <div\r\n                id=\"sign-in-form-error\"\r\n                className=\"spartan pt-2\"\r\n                style={{\r\n                  fontSize: \"x-small\",\r\n                  color: \"red\",\r\n                  textAlign: \"center\"\r\n                }}\r\n              >\r\n                {this.state.errMsg}\r\n              </div>\r\n              <div id=\"password-reset\" className=\"py-1\">\r\n                <small style={{ fontWeight: \"500\", cursor: \"pointer\" }}>\r\n                  <Link to=\"/foodcommune/passwordreset\" className=\"link-gray\">\r\n                    Reset Password\r\n                  </Link>\r\n                </small>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignIn;\r\n"]},"metadata":{},"sourceType":"module"}