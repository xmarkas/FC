{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\xmark\\\\Desktop\\\\Code\\\\Servers\\\\Qumoc\\\\food-commune\\\\src\\\\components\\\\DashboardView.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport AddDeal from \"./AddDeal\";\nimport Profile from \"./Profile\";\nimport Buys from \"./Buys\";\nimport Deals from \"./Deals\";\nimport MyGroups from \"./MyGroups\";\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    token: state.token\n  };\n};\n\nclass DashboardView extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      token: null,\n      user: null,\n      data: null,\n      showAddDeal: false,\n      editDeal: null\n    };\n\n    this.newDeal = payload => {\n      insertDeal(this.props.token, this.props.user.id, payload).then(resolved => {\n        console.log(resolved);\n        this.setState(prevState => {\n          let Deals = [...prevState.data.Deals];\n          Deals.push(payload);\n          let data = { ...prevState.data,\n            Deals: Deals\n          };\n          return {\n            data: data\n          };\n        }, () => {\n          this.setState({\n            showAddDeal: false\n          });\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.updateDeal = payload => {\n      updateDealEdit(this.props.token, this.props.user.id, payload).then(resolved => {\n        console.log(resolved);\n        this.setState(prevState => {\n          let Deals = [...prevState.data.Deals];\n          let deal = Deals.findIndex(obj => {\n            return obj.id === payload.id;\n          });\n          Deals[deal] = payload;\n          let data = { ...prevState.data,\n            Deals: Deals\n          };\n          return {\n            data: data\n          };\n        }, () => {\n          this.setState({\n            showAddDeal: false\n          });\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.removeDeal = payload => {\n      removeDealDB(this.props.token, this.props.user.id, payload).then(resolved => {\n        console.log(resolved); // this.setState(\n        //   prevState => {\n        //     let Deals = [...prevState.data.Deals];\n        //     let deal = Deals.findIndex(obj => {\n        //       return obj.id === payload.id;\n        //     });\n        //     Deals[deal] = payload;\n        //     let data = { ...prevState.data, Deals: Deals };\n        //     return { data: data };\n        //   },\n        //   () => {\n        //     this.setState({ showAddDeal: false });\n        //   }\n        // );\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.showAddDeal = toggle => {\n      this.setState({\n        showAddDeal: this.state.showAddDeal ? false : true,\n        editDeal: null\n      });\n    };\n\n    this.editDeal = index => {\n      this.setState({\n        editDeal: this.state.data.Deals[index],\n        showAddDeal: true\n      });\n    };\n\n    this.updateProfile = payload => {\n      updateUserProfile(this.props.token, this.props.user.id, payload).then(resolved => {\n        console.log(resolved);\n        this.setState(prevState => {\n          let user = { ...prevState.user\n          };\n          let keys = Object.keys(payload);\n          keys.forEach(k => {\n            user[k] = payload[k];\n          });\n          return {\n            user: user\n          };\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n  }\n\n  componentWillMount() {\n    fetchData(this.props.token, this.props.user.id).then(resolved => {\n      console.log(resolved);\n      this.setState({\n        data: resolved\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"dashboard\",\n      className: \"row row-border justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }\n    }, this.state.showAddDeal && /*#__PURE__*/React.createElement(AddDeal, {\n      editDeal: this.state.editDeal,\n      showAddDeal: this.showAddDeal,\n      user: this.props.user,\n      newDeal: this.newDeal,\n      updateDeal: this.updateDeal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"main-content\",\n      className: \"col-sm-12 col-md-10 spartan py-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"profile-card\",\n      className: \"col-sm-12 col-lg-6 d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Profile, {\n      updateProfile: this.updateProfile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"groups-card\",\n      className: \"col-sm-12 col-lg-6 d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(MyGroups, {\n      data: this.state.data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"buys-card\",\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Buys, {\n      data: this.state.data,\n      showAddDeal: this.showAddDeal,\n      editDeal: this.editDeal,\n      removeDeal: this.removeDeal,\n      user: this.props.user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }\n    }))))));\n  }\n\n}\n\nexport default connect(mapStateToProps)(DashboardView);\n\nfunction fetchData(token, userid) {\n  console.log(\"fetching data......\", token, userid);\n  return new Promise((resolve, reject) => {\n    let request = {\n      userId: userid\n    };\n    let options = {\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }),\n      body: JSON.stringify({\n        entity: request\n      })\n    };\n    fetch(\"https://qumoc.com/foodcommune/accounts/dashboard\", options).then(res => {\n      if (res) return res.json();\n    }).then(res => {\n      if (!res.success) {\n        // Return to account detail and display error message\n        resolve(res);\n      } else {\n        reject(\"Unable to retrieve data\");\n      }\n    });\n  });\n}\n\nfunction insertDeal(token, userid, payload) {\n  console.log(\"fetching data......\", token, userid);\n  payload.user_id = userid; // Append user_id to payload\n\n  return new Promise((resolve, reject) => {\n    let options = {\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }),\n      body: JSON.stringify({\n        entity: payload\n      })\n    };\n    fetch(\"/foodcommune/accounts/insertDeal\", options).then(res => {\n      return res.json();\n    }).then(res => {\n      if (res.success) {\n        // Return to account detail and display error message\n        resolve(res);\n      } else {\n        reject(res);\n      }\n    });\n  });\n}\n\nfunction updateDealEdit(token, userid, payload) {\n  console.log(\"fetching data......\", token, userid);\n  payload.user_id = userid; // Append user_id to payload\n\n  return new Promise((resolve, reject) => {\n    let options = {\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }),\n      body: JSON.stringify({\n        entity: payload\n      })\n    };\n    fetch(\"/foodcommune/accounts/updateDeal\", options).then(res => {\n      return res.json();\n    }).then(res => {\n      if (res.success) {\n        // Return to account detail and display error message\n        resolve(res);\n      } else {\n        reject(res);\n      }\n    });\n  });\n}\n\nfunction removeDealDB(token, userid, payload) {\n  payload.user_id = userid; // Append user_id to payload\n\n  return new Promise((resolve, reject) => {\n    let options = {\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }),\n      body: JSON.stringify({\n        entity: {\n          dealID: payload\n        }\n      })\n    };\n    fetch(\"/foodcommune/accounts/removeDealDB\", options).then(res => {\n      return res.json();\n    }).then(res => {\n      if (res.success) {\n        // Return to account detail and display error message\n        resolve(res);\n      } else {\n        reject(res);\n      }\n    });\n  });\n}\n\nfunction updateUserProfile(token, userid, payload) {\n  let payloadObj = {\n    userId: userid,\n    values: payload\n  };\n  console.log(\"fetching data......\", token, userid);\n  return new Promise((resolve, reject) => {\n    let options = {\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }),\n      body: JSON.stringify({\n        entity: payloadObj\n      })\n    };\n    fetch(\"/foodcommune/accounts/updateUserProfile\", options).then(res => {\n      return res.json();\n    }).then(res => {\n      if (res.success) {\n        // Return to account detail and display error message\n        resolve(res);\n      } else {\n        reject(res);\n      }\n    });\n  });\n}","map":{"version":3,"sources":["C:/Users/xmark/Desktop/Code/Servers/Qumoc/food-commune/src/components/DashboardView.jsx"],"names":["React","Component","connect","AddDeal","Profile","Buys","Deals","MyGroups","mapStateToProps","state","user","token","DashboardView","data","showAddDeal","editDeal","newDeal","payload","insertDeal","props","id","then","resolved","console","log","setState","prevState","push","catch","err","updateDeal","updateDealEdit","deal","findIndex","obj","removeDeal","removeDealDB","toggle","index","updateProfile","updateUserProfile","keys","Object","forEach","k","componentWillMount","fetchData","render","userid","Promise","resolve","reject","request","userId","options","method","headers","Headers","Authorization","body","JSON","stringify","entity","fetch","res","json","success","user_id","dealID","payloadObj","values"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport AddDeal from \"./AddDeal\";\r\nimport Profile from \"./Profile\";\r\nimport Buys from \"./Buys\";\r\nimport Deals from \"./Deals\";\r\nimport MyGroups from \"./MyGroups\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.user,\r\n    token: state.token\r\n  };\r\n};\r\n\r\nclass DashboardView extends Component {\r\n  state = {\r\n    token: null,\r\n    user: null,\r\n    data: null,\r\n    showAddDeal: false,\r\n    editDeal: null\r\n  };\r\n\r\n  componentWillMount() {\r\n    fetchData(this.props.token, this.props.user.id)\r\n      .then(resolved => {\r\n        console.log(resolved);\r\n        this.setState({ data: resolved });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  newDeal = payload => {\r\n    insertDeal(this.props.token, this.props.user.id, payload)\r\n      .then(resolved => {\r\n        console.log(resolved);\r\n        this.setState(\r\n          prevState => {\r\n            let Deals = [...prevState.data.Deals];\r\n\r\n            Deals.push(payload);\r\n            let data = { ...prevState.data, Deals: Deals };\r\n            return { data: data };\r\n          },\r\n          () => {\r\n            this.setState({ showAddDeal: false });\r\n          }\r\n        );\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  updateDeal = payload => {\r\n    updateDealEdit(this.props.token, this.props.user.id, payload)\r\n      .then(resolved => {\r\n        console.log(resolved);\r\n        this.setState(\r\n          prevState => {\r\n            let Deals = [...prevState.data.Deals];\r\n            let deal = Deals.findIndex(obj => {\r\n              return obj.id === payload.id;\r\n            });\r\n            Deals[deal] = payload;\r\n\r\n            let data = { ...prevState.data, Deals: Deals };\r\n            return { data: data };\r\n          },\r\n          () => {\r\n            this.setState({ showAddDeal: false });\r\n          }\r\n        );\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  removeDeal = payload => {\r\n    removeDealDB(this.props.token, this.props.user.id, payload)\r\n      .then(resolved => {\r\n        console.log(resolved);\r\n        // this.setState(\r\n        //   prevState => {\r\n        //     let Deals = [...prevState.data.Deals];\r\n        //     let deal = Deals.findIndex(obj => {\r\n        //       return obj.id === payload.id;\r\n        //     });\r\n        //     Deals[deal] = payload;\r\n\r\n        //     let data = { ...prevState.data, Deals: Deals };\r\n        //     return { data: data };\r\n        //   },\r\n        //   () => {\r\n        //     this.setState({ showAddDeal: false });\r\n        //   }\r\n        // );\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  showAddDeal = toggle => {\r\n    this.setState({\r\n      showAddDeal: this.state.showAddDeal ? false : true,\r\n      editDeal: null\r\n    });\r\n  };\r\n\r\n  editDeal = index => {\r\n    this.setState({\r\n      editDeal: this.state.data.Deals[index],\r\n      showAddDeal: true\r\n    });\r\n  };\r\n\r\n  updateProfile = payload => {\r\n    updateUserProfile(this.props.token, this.props.user.id, payload)\r\n      .then(resolved => {\r\n        console.log(resolved);\r\n        this.setState(prevState => {\r\n          let user = { ...prevState.user };\r\n          let keys = Object.keys(payload);\r\n          keys.forEach(k => {\r\n            user[k] = payload[k];\r\n          });\r\n\r\n          return { user: user };\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {/* Dashboard */}\r\n        <div id=\"dashboard\" className=\"row row-border justify-content-center\">\r\n          {/* Add Deal */}\r\n          {this.state.showAddDeal && (\r\n            <AddDeal\r\n              editDeal={this.state.editDeal}\r\n              showAddDeal={this.showAddDeal}\r\n              user={this.props.user}\r\n              newDeal={this.newDeal}\r\n              updateDeal={this.updateDeal}\r\n            />\r\n          )}\r\n          <div id=\"main-content\" className=\"col-sm-12 col-md-10 spartan py-4\">\r\n            <div className=\"row\">\r\n              <div id=\"profile-card\" className=\"col-sm-12 col-lg-6 d-flex\">\r\n                {/* <!-- PROFILE --> */}\r\n\r\n                <Profile updateProfile={this.updateProfile} />\r\n              </div>\r\n\r\n              <div id=\"groups-card\" className=\"col-sm-12 col-lg-6 d-flex\">\r\n                {/* <!-- GROUPS --> */}\r\n                <MyGroups data={this.state.data} />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mt-4\">\r\n              <div id=\"buys-card\" className=\"col-12\">\r\n                {/* <!-- BUYS --> */}\r\n                <Buys\r\n                  data={this.state.data}\r\n                  showAddDeal={this.showAddDeal}\r\n                  editDeal={this.editDeal}\r\n                  removeDeal={this.removeDeal}\r\n                  user={this.props.user}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(DashboardView);\r\n\r\nfunction fetchData(token, userid) {\r\n  console.log(\"fetching data......\", token, userid);\r\n  return new Promise((resolve, reject) => {\r\n    let request = { userId: userid };\r\n    let options = {\r\n      method: \"POST\",\r\n      headers: new Headers({\r\n        Authorization: \"Bearer \" + token,\r\n        \"Content-Type\": \"application/json\"\r\n      }),\r\n      body: JSON.stringify({\r\n        entity: request\r\n      })\r\n    };\r\n    fetch(\"https://qumoc.com/foodcommune/accounts/dashboard\", options)\r\n      .then(res => {\r\n        if (res) return res.json();\r\n      })\r\n      .then(res => {\r\n        if (!res.success) {\r\n          // Return to account detail and display error message\r\n          resolve(res);\r\n        } else {\r\n          reject(\"Unable to retrieve data\");\r\n        }\r\n      });\r\n  });\r\n}\r\n\r\nfunction insertDeal(token, userid, payload) {\r\n  console.log(\"fetching data......\", token, userid);\r\n  payload.user_id = userid; // Append user_id to payload\r\n  return new Promise((resolve, reject) => {\r\n    let options = {\r\n      method: \"POST\",\r\n      headers: new Headers({\r\n        Authorization: \"Bearer \" + token,\r\n        \"Content-Type\": \"application/json\"\r\n      }),\r\n      body: JSON.stringify({\r\n        entity: payload\r\n      })\r\n    };\r\n    fetch(\"/foodcommune/accounts/insertDeal\", options)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n      .then(res => {\r\n        if (res.success) {\r\n          // Return to account detail and display error message\r\n          resolve(res);\r\n        } else {\r\n          reject(res);\r\n        }\r\n      });\r\n  });\r\n}\r\n\r\nfunction updateDealEdit(token, userid, payload) {\r\n  console.log(\"fetching data......\", token, userid);\r\n  payload.user_id = userid; // Append user_id to payload\r\n  return new Promise((resolve, reject) => {\r\n    let options = {\r\n      method: \"POST\",\r\n      headers: new Headers({\r\n        Authorization: \"Bearer \" + token,\r\n        \"Content-Type\": \"application/json\"\r\n      }),\r\n      body: JSON.stringify({\r\n        entity: payload\r\n      })\r\n    };\r\n    fetch(\"/foodcommune/accounts/updateDeal\", options)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n      .then(res => {\r\n        if (res.success) {\r\n          // Return to account detail and display error message\r\n          resolve(res);\r\n        } else {\r\n          reject(res);\r\n        }\r\n      });\r\n  });\r\n}\r\n\r\nfunction removeDealDB(token, userid, payload) {\r\n  payload.user_id = userid; // Append user_id to payload\r\n  return new Promise((resolve, reject) => {\r\n    let options = {\r\n      method: \"POST\",\r\n      headers: new Headers({\r\n        Authorization: \"Bearer \" + token,\r\n        \"Content-Type\": \"application/json\"\r\n      }),\r\n      body: JSON.stringify({\r\n        entity: { dealID: payload }\r\n      })\r\n    };\r\n    fetch(\"/foodcommune/accounts/removeDealDB\", options)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n      .then(res => {\r\n        if (res.success) {\r\n          // Return to account detail and display error message\r\n          resolve(res);\r\n        } else {\r\n          reject(res);\r\n        }\r\n      });\r\n  });\r\n}\r\n\r\nfunction updateUserProfile(token, userid, payload) {\r\n  let payloadObj = { userId: userid, values: payload };\r\n  console.log(\"fetching data......\", token, userid);\r\n  return new Promise((resolve, reject) => {\r\n    let options = {\r\n      method: \"POST\",\r\n      headers: new Headers({\r\n        Authorization: \"Bearer \" + token,\r\n        \"Content-Type\": \"application/json\"\r\n      }),\r\n      body: JSON.stringify({\r\n        entity: payloadObj\r\n      })\r\n    };\r\n    fetch(\"/foodcommune/accounts/updateUserProfile\", options)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n      .then(res => {\r\n        if (res.success) {\r\n          // Return to account detail and display error message\r\n          resolve(res);\r\n        } else {\r\n          reject(res);\r\n        }\r\n      });\r\n  });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}