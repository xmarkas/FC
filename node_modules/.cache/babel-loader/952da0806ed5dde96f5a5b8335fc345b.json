{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\xmark\\\\Desktop\\\\Code\\\\Servers\\\\Qumoc\\\\food-commune\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\xmark\\\\Desktop\\\\Code\\\\Servers\\\\Qumoc\\\\food-commune\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _objectSpread from\"C:\\\\Users\\\\xmark\\\\Desktop\\\\Code\\\\Servers\\\\Qumoc\\\\food-commune\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"C:\\\\Users\\\\xmark\\\\Desktop\\\\Code\\\\Servers\\\\Qumoc\\\\food-commune\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\xmark\\\\Desktop\\\\Code\\\\Servers\\\\Qumoc\\\\food-commune\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\xmark\\\\Desktop\\\\Code\\\\Servers\\\\Qumoc\\\\food-commune\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\xmark\\\\Desktop\\\\Code\\\\Servers\\\\Qumoc\\\\food-commune\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import{signInAuthenticate}from\"../util/okta\";import{Route,Redirect}from'react-router-dom';var CreateAccount=/*#__PURE__*/function(_Component){_inherits(CreateAccount,_Component);var _super=_createSuper(CreateAccount);function CreateAccount(){var _this;_classCallCheck(this,CreateAccount);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={form:{email:\"\",passwordA:\"\",passwordB:\"\",firstName:\"\",lastName:\"\",phoneNumber:\"\"},validate:false,errMsg:\"\",showVerification:false,verificationCode:\"\",verificationCodeInput:\"\",verifyCodeError:\"\",redirectToDash:false};_this.setFormData=function(obj){_this.setState(function(prevState){var form=_objectSpread({},prevState.form,{},obj);return{form:form};});};_this.closeAccountWindow=function(ev){if(ev.target.id===\"account-wrapper\")_this.props.createAccount();};_this.startCreateAccount=function(){var form=_this.state.form;var formErrors=0;// High light fields left blank\nObject.keys(form).forEach(function(key){if(form[key]===\"\"){formErrors++;}});if(formErrors>0){// Stop account flow on form errors\n_this.setState({validate:true});console.log(\"error\");return;}// Verify email\nif(!form.email.includes(\"@\")||!form.email.includes(\".\")){_this.setState({errMsg:\"Email is not valid\"});return;}// Verify password match\nif(form.passwordA!==form.passwordB){_this.setState({errMsg:\"Passwords do not match. Please re-type passwords\"});return;// Stop account flow\n}else{_this.setState({errMsg:\"\"});}// Verify containt upper and lower case and a number\nvar matchEXP=/^(?:(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).*)$/;if(!form.passwordA.match(matchEXP)){_this.setState({errMsg:\"Password does not meet criteria!\"});return;}// Verify password length\nif(form.passwordA.length<8){_this.setState({errMsg:\"Passwords must be at least 8 characters!\"});return;}// Verify phone number\nvar format=form.phoneNumber.replace(/\\W/g,\"\");format=format[0]==1?format.substring(1):format;if(format.length<10||format.length>10){_this.setState({errMsg:\"Not a valid phone number\"});return;}else{console.log(\"phone\",format);}_this.verifyAccount();};_this.verifyAccount=function(){_this.setState({showVerification:true,errMsg:\"\",verificationCodeInput:\"\",verifyCodeError:\"\"});/**** TESTING */ // return;\n// Generate 5 digit-verification code\nvar verificaiton=Math.floor(Math.random()*10000)*new Date().getTime();var digits=verificaiton.toString().substr(0,5);_this.setState({verificationCode:digits});// Send digits to profile creator\nvar options={method:\"POST\",headers:new Headers({Authorization:\"Bearer \"+_this.props.provisional,\"Content-Type\":\"application/json\"}),body:JSON.stringify({entity:JSON.stringify({phone:_this.state.form.phoneNumber,code:digits})})};fetch(\"https://qumoc.com/foodcommune/site/verify\",options).then(function(res){return res.json();}).then(function(res){console.log(res);});};_this.verifyCode=function(){// Accept verification input\nif(_this.state.verificationCodeInput===_this.state.verificationCode){_this.insertUser();console.log(\"ACCOUNT/PHONE VERIFIED\");}else{_this.setState({verifyCodeError:\"The digits you entered do not match!\"});}};_this.insertUser=function(){var data={firstName:_this.state.form.firstName,lastName:_this.state.form.lastName,email:_this.state.form.email,phoneNumber:_this.state.form.phoneNumber,password:_this.state.form.passwordA};console.log(\"provisional\",_this.props.provisional);var options={method:\"POST\",headers:new Headers({Authorization:\"Bearer \"+_this.props.provisional,\"Content-Type\":\"application/json\"}),body:JSON.stringify({entity:JSON.stringify(data)})};fetch(\"https://qumoc.com/foodcommune/site/createAccount\",options).then(function(res){return res.json();}).then(function(res){if(!res.success){// Return to account detail and display error message\nconsole.log(res);_this.setState({showVerification:false,errMsg:res.msg});}else{_this.signInUser();}});};_this.signInUser=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return signInAuthenticate(_this.state.form.email,_this.state.form.passwordA);case 2:res=_context.sent;// On successful account creation redirct to dashboard\nif(res){_this.setState({redirectToDash:true});}case 4:case\"end\":return _context.stop();}}},_callee);}));return _this;}_createClass(CreateAccount,[{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(React.Fragment,null,this.state.redirectToDash&&/*#__PURE__*/React.createElement(Route,null,/*#__PURE__*/React.createElement(Redirect,{to:{pathname:\"/foodcommune/dashboard\"}})),/*#__PURE__*/React.createElement(\"div\",{id:\"account-wrapper\",onClick:function onClick(ev){return _this2.closeAccountWindow(ev);}},/*#__PURE__*/React.createElement(\"div\",{id:\"create-account\"},/*#__PURE__*/React.createElement(\"div\",{className:\"header spartan\"},/*#__PURE__*/React.createElement(\"img\",{width:\"40px\",src:require(\"../media/logoAlpha.gif\"),alt:\"\"}),/*#__PURE__*/React.createElement(\"div\",null,\"Create Account\")),!this.state.showVerification&&/*#__PURE__*/React.createElement(\"div\",{id:\"create-account-form\",className:\"spartan content\"},/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\"Email address\"),/*#__PURE__*/React.createElement(\"input\",{value:this.state.form.email,onChange:function onChange(ev){return _this2.setFormData({email:ev.target.value});},type:\"email\",className:this.state.validate&&this.state.form.email===\"\"?\"form-control require\":\"form-control\",id:\"email\",\"aria-describedby\":\"emailHelp\"}),/*#__PURE__*/React.createElement(\"small\",{id:\"emailHelp\",className:\"form-text text-muted\"},\"We'll never share your email with anyone else.\")),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\"Create Password\"),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"small\",{className:\"text-muted\"},\"Must be least 8 characters, a lowercase letter, an uppercase letter, a number, no parts of your username.\")),/*#__PURE__*/React.createElement(\"input\",{value:this.state.form.passwordA,onChange:function onChange(ev){return _this2.setFormData({passwordA:ev.target.value});},type:\"password\",className:this.state.validate&&this.state.form.passwordA===\"\"?\"form-control require\":\"form-control\",id:\"InputPassword1\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\"Re-type Password\"),/*#__PURE__*/React.createElement(\"input\",{value:this.state.form.passwordB,onChange:function onChange(ev){return _this2.setFormData({passwordB:ev.target.value});},type:\"password\",className:this.state.validate&&this.state.form.passwordB===\"\"?\"form-control require\":\"form-control\",id:\"InputPassword2\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\"First Name\"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:this.state.validate&&this.state.form.firstName===\"\"?\"form-control require\":\"form-control\",id:\"fname\",value:this.state.form.firstName,onChange:function onChange(ev){return _this2.setFormData({firstName:ev.target.value});}})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\"Last Name\"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:this.state.validate&&this.state.form.lastName===\"\"?\"form-control require\":\"form-control\",id:\"lname\",value:this.state.form.lastName,onChange:function onChange(ev){return _this2.setFormData({lastName:ev.target.value});}})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\"Phone Number\"),/*#__PURE__*/React.createElement(\"input\",{type:\"phone\",className:this.state.validate&&this.state.form.phoneNumber===\"\"?\"form-control require\":\"form-control\",id:\"phone\",value:this.state.form.phoneNumber,onChange:function onChange(ev){return _this2.setFormData({phoneNumber:ev.target.value});}}),/*#__PURE__*/React.createElement(\"small\",{className:\"form-text text-muted\"},\"You will receive a SMS to verify your profile.\")),/*#__PURE__*/React.createElement(\"button\",{id:\"create-account-go\",className:\"btn btn-primary\",onClick:this.startCreateAccount},\"Create\"),/*#__PURE__*/React.createElement(\"div\",{id:\"form-error\",className:\"spartan pt-2\",style:{fontSize:\"x-small\",color:\"red\",textAlign:\"center\"}},this.state.errMsg)),this.state.showVerification&&/*#__PURE__*/React.createElement(\"div\",{id:\"verify-account\",className:\"content spartan\",style:{lineHeight:\"initial\",color:\"dimgray\"}},/*#__PURE__*/React.createElement(\"div\",{id:\"verify-go-back\",className:\"pb-4\",style:{cursor:\"pointer\",color:\"dodgerblue\"},onClick:function onClick(){return _this2.setState({showVerification:false});}},/*#__PURE__*/React.createElement(\"i\",{className:\"fas fa-chevron-left\"}),/*#__PURE__*/React.createElement(\"span\",{className:\"ml-1\"},\"Edit info\")),/*#__PURE__*/React.createElement(\"div\",null,\"A message has been sent to the phone number you provided with a verification code. Please enter it here.\"),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group py-2\"},/*#__PURE__*/React.createElement(\"label\",null,\"5-digit verification code\"),/*#__PURE__*/React.createElement(\"input\",{onChange:function onChange(ev){return _this2.setState({verificationCodeInput:ev.target.value});},type:\"text\",className:\"form-control\",id:\"v-code\"})),/*#__PURE__*/React.createElement(\"button\",{id:\"verify-account-go\",className:\"btn btn-success mr-2\",onClick:this.verifyCode},\"Verify\"),/*#__PURE__*/React.createElement(\"button\",{id:\"verify-resend-go\",className:\"btn btn-primary\",onClick:this.verifyAccount},\"Re-send\"),/*#__PURE__*/React.createElement(\"div\",{id:\"verify-form-error\",className:\"spartan pt-2\",style:{fontSize:\"x-small\",color:\"red\",textAlign:\"center\"}},this.state.verifyCodeError)))));}}]);return CreateAccount;}(Component);export default CreateAccount;","map":{"version":3,"sources":["C:/Users/xmark/Desktop/Code/Servers/Qumoc/food-commune/src/components/CreateAccount.jsx"],"names":["React","Component","signInAuthenticate","Route","Redirect","CreateAccount","state","form","email","passwordA","passwordB","firstName","lastName","phoneNumber","validate","errMsg","showVerification","verificationCode","verificationCodeInput","verifyCodeError","redirectToDash","setFormData","obj","setState","prevState","closeAccountWindow","ev","target","id","props","createAccount","startCreateAccount","formErrors","Object","keys","forEach","key","console","log","includes","matchEXP","match","length","format","replace","substring","verifyAccount","verificaiton","Math","floor","random","Date","getTime","digits","toString","substr","options","method","headers","Headers","Authorization","provisional","body","JSON","stringify","entity","phone","code","fetch","then","res","json","verifyCode","insertUser","data","password","success","msg","signInUser","pathname","require","value","fontSize","color","textAlign","lineHeight","cursor"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { signInAuthenticate } from \"../util/okta\";\r\nimport {Route, Redirect } from 'react-router-dom';\r\n\r\nclass CreateAccount extends Component {\r\n  state = {\r\n    form: {\r\n      email: \"\",\r\n      passwordA: \"\",\r\n      passwordB: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      phoneNumber: \"\"\r\n    },\r\n    validate: false,\r\n    errMsg: \"\",\r\n    showVerification: false,\r\n    verificationCode: \"\",\r\n    verificationCodeInput: \"\",\r\n    verifyCodeError: \"\",\r\n    redirectToDash: false\r\n  };\r\n\r\n  setFormData = obj => {\r\n    this.setState(prevState => {\r\n      let form = { ...prevState.form, ...obj };\r\n      return { form: form };\r\n    });\r\n  };\r\n\r\n  closeAccountWindow = ev => {\r\n    if (ev.target.id === \"account-wrapper\") this.props.createAccount();\r\n  };\r\n\r\n  startCreateAccount = () => {\r\n    let form = this.state.form;\r\n    let formErrors = 0;\r\n    // High light fields left blank\r\n    Object.keys(form).forEach(key => {\r\n      if (form[key] === \"\") {\r\n        formErrors++;\r\n      }\r\n    });\r\n\r\n    if (formErrors > 0) {\r\n      // Stop account flow on form errors\r\n      this.setState({ validate: true });\r\n      console.log(\"error\");\r\n      return;\r\n    }\r\n\r\n    // Verify email\r\n    if (!form.email.includes(\"@\") || !form.email.includes(\".\")) {\r\n      this.setState({ errMsg: \"Email is not valid\" });\r\n      return;\r\n    }\r\n\r\n    // Verify password match\r\n    if (form.passwordA !== form.passwordB) {\r\n      this.setState({\r\n        errMsg: \"Passwords do not match. Please re-type passwords\"\r\n      });\r\n      return; // Stop account flow\r\n    } else {\r\n      this.setState({ errMsg: \"\" });\r\n    }\r\n\r\n    // Verify containt upper and lower case and a number\r\n    let matchEXP = /^(?:(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).*)$/;\r\n    if (!form.passwordA.match(matchEXP)) {\r\n      this.setState({ errMsg: \"Password does not meet criteria!\" });\r\n      return;\r\n    }\r\n\r\n    // Verify password length\r\n    if (form.passwordA.length < 8) {\r\n      this.setState({ errMsg: \"Passwords must be at least 8 characters!\" });\r\n      return;\r\n    }\r\n\r\n    // Verify phone number\r\n    let format = form.phoneNumber.replace(/\\W/g, \"\");\r\n    format = format[0] == 1 ? format.substring(1) : format;\r\n\r\n    if (format.length < 10 || format.length > 10) {\r\n      this.setState({ errMsg: \"Not a valid phone number\" });\r\n      return;\r\n    } else {\r\n      console.log(\"phone\", format);\r\n    }\r\n\r\n    this.verifyAccount();\r\n  };\r\n\r\n  verifyAccount = () => {\r\n    this.setState({\r\n      showVerification: true,\r\n      errMsg: \"\",\r\n      verificationCodeInput: \"\",\r\n      verifyCodeError: \"\"\r\n    });\r\n\r\n    /**** TESTING */\r\n    // return;\r\n\r\n    // Generate 5 digit-verification code\r\n    let verificaiton = Math.floor(Math.random() * 10000) * new Date().getTime();\r\n    let digits = verificaiton.toString().substr(0, 5);\r\n    this.setState({ verificationCode: digits });\r\n\r\n    // Send digits to profile creator\r\n    var options = {\r\n      method: \"POST\",\r\n      headers: new Headers({\r\n        Authorization: \"Bearer \" + this.props.provisional,\r\n        \"Content-Type\": \"application/json\"\r\n      }),\r\n      body: JSON.stringify({\r\n        entity: JSON.stringify({\r\n          phone: this.state.form.phoneNumber,\r\n          code: digits\r\n        })\r\n      })\r\n    };\r\n\r\n    fetch(\"https://qumoc.com/foodcommune/site/verify\", options)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n      .then(res => {\r\n        console.log(res);\r\n      });\r\n  };\r\n\r\n  verifyCode = () => {\r\n    // Accept verification input\r\n    if (this.state.verificationCodeInput === this.state.verificationCode) {\r\n      this.insertUser();\r\n      console.log(\"ACCOUNT/PHONE VERIFIED\");\r\n    } else {\r\n      this.setState({\r\n        verifyCodeError: \"The digits you entered do not match!\"\r\n      });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * function:        Insert User\r\n   *\r\n   * User account form is sent to Okta via server\r\n   * @param {*} data\r\n   */\r\n  insertUser = () => {\r\n    let data = {\r\n      firstName: this.state.form.firstName,\r\n      lastName: this.state.form.lastName,\r\n      email: this.state.form.email,\r\n      phoneNumber: this.state.form.phoneNumber,\r\n      password: this.state.form.passwordA\r\n    };\r\n\r\n    console.log(\"provisional\", this.props.provisional);\r\n    var options = {\r\n      method: \"POST\",\r\n      headers: new Headers({\r\n        Authorization: \"Bearer \" + this.props.provisional,\r\n        \"Content-Type\": \"application/json\"\r\n      }),\r\n      body: JSON.stringify({\r\n        entity: JSON.stringify(data)\r\n      })\r\n    };\r\n\r\n    fetch(\"https://qumoc.com/foodcommune/site/createAccount\", options)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n      .then(res => {\r\n        if (!res.success) {\r\n          // Return to account detail and display error message\r\n          console.log(res);\r\n          this.setState({\r\n            showVerification: false,\r\n            errMsg: res.msg\r\n          });\r\n        } else {\r\n          this.signInUser();\r\n        }\r\n      });\r\n  };\r\n\r\n  signInUser = async () => {\r\n    let res = await signInAuthenticate(this.state.form.email, this.state.form.passwordA);\r\n\r\n    // On successful account creation redirct to dashboard\r\n    if (res) {\r\n      this.setState({ redirectToDash: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.state.redirectToDash && (\r\n          <Route>\r\n            <Redirect to={{ pathname: \"/foodcommune/dashboard\" }}></Redirect>\r\n          </Route>\r\n        )}\r\n        {/* // <!-- Create Account --> */}\r\n        <div id=\"account-wrapper\" onClick={ev => this.closeAccountWindow(ev)}>\r\n          <div id=\"create-account\">\r\n            <div className=\"header spartan\">\r\n              <img\r\n                width=\"40px\"\r\n                src={require(\"../media/logoAlpha.gif\")}\r\n                alt=\"\"\r\n              />\r\n              <div>Create Account</div>\r\n            </div>\r\n            {!this.state.showVerification && (\r\n              <div id=\"create-account-form\" className=\"spartan content\">\r\n                {/* <!-- email --> */}\r\n                <div className=\"form-group\">\r\n                  <label>Email address</label>\r\n                  <input\r\n                    value={this.state.form.email}\r\n                    onChange={ev =>\r\n                      this.setFormData({ email: ev.target.value })\r\n                    }\r\n                    type=\"email\"\r\n                    className={\r\n                      this.state.validate && this.state.form.email === \"\"\r\n                        ? \"form-control require\"\r\n                        : \"form-control\"\r\n                    }\r\n                    id=\"email\"\r\n                    aria-describedby=\"emailHelp\"\r\n                  ></input>\r\n                  <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                    We'll never share your email with anyone else.\r\n                  </small>\r\n                </div>\r\n                {/* <!-- password --> */}\r\n                <div className=\"form-group\">\r\n                  <label>Create Password</label>\r\n                  <div>\r\n                    <small className=\"text-muted\">\r\n                      Must be least 8 characters, a lowercase letter, an\r\n                      uppercase letter, a number, no parts of your username.\r\n                    </small>\r\n                  </div>\r\n                  <input\r\n                    value={this.state.form.passwordA}\r\n                    onChange={ev =>\r\n                      this.setFormData({ passwordA: ev.target.value })\r\n                    }\r\n                    type=\"password\"\r\n                    className={\r\n                      this.state.validate && this.state.form.passwordA === \"\"\r\n                        ? \"form-control require\"\r\n                        : \"form-control\"\r\n                    }\r\n                    id=\"InputPassword1\"\r\n                  ></input>\r\n                </div>\r\n                {/* <!-- password verify --> */}\r\n                <div className=\"form-group\">\r\n                  <label>Re-type Password</label>\r\n                  <input\r\n                    value={this.state.form.passwordB}\r\n                    onChange={ev =>\r\n                      this.setFormData({ passwordB: ev.target.value })\r\n                    }\r\n                    type=\"password\"\r\n                    className={\r\n                      this.state.validate && this.state.form.passwordB === \"\"\r\n                        ? \"form-control require\"\r\n                        : \"form-control\"\r\n                    }\r\n                    id=\"InputPassword2\"\r\n                  ></input>\r\n                </div>\r\n                {/* <!-- first name --> */}\r\n                <div className=\"form-group\">\r\n                  <label>First Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={\r\n                      this.state.validate && this.state.form.firstName === \"\"\r\n                        ? \"form-control require\"\r\n                        : \"form-control\"\r\n                    }\r\n                    id=\"fname\"\r\n                    value={this.state.form.firstName}\r\n                    onChange={ev =>\r\n                      this.setFormData({ firstName: ev.target.value })\r\n                    }\r\n                  ></input>\r\n                </div>\r\n                {/* <!-- last name --> */}\r\n                <div className=\"form-group\">\r\n                  <label>Last Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={\r\n                      this.state.validate && this.state.form.lastName === \"\"\r\n                        ? \"form-control require\"\r\n                        : \"form-control\"\r\n                    }\r\n                    id=\"lname\"\r\n                    value={this.state.form.lastName}\r\n                    onChange={ev =>\r\n                      this.setFormData({ lastName: ev.target.value })\r\n                    }\r\n                  ></input>\r\n                </div>\r\n                {/* <!-- Phone --> */}\r\n                <div className=\"form-group\">\r\n                  <label>Phone Number</label>\r\n                  <input\r\n                    type=\"phone\"\r\n                    className={\r\n                      this.state.validate && this.state.form.phoneNumber === \"\"\r\n                        ? \"form-control require\"\r\n                        : \"form-control\"\r\n                    }\r\n                    id=\"phone\"\r\n                    value={this.state.form.phoneNumber}\r\n                    onChange={ev =>\r\n                      this.setFormData({ phoneNumber: ev.target.value })\r\n                    }\r\n                  ></input>\r\n                  <small className=\"form-text text-muted\">\r\n                    You will receive a SMS to verify your profile.\r\n                  </small>\r\n                </div>\r\n\r\n                <button\r\n                  id=\"create-account-go\"\r\n                  className=\"btn btn-primary\"\r\n                  onClick={this.startCreateAccount}\r\n                >\r\n                  Create\r\n                </button>\r\n                <div\r\n                  id=\"form-error\"\r\n                  className=\"spartan pt-2\"\r\n                  style={{\r\n                    fontSize: \"x-small\",\r\n                    color: \"red\",\r\n                    textAlign: \"center\"\r\n                  }}\r\n                >\r\n                  {this.state.errMsg}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* <!-- Text Verification --> */}\r\n            {this.state.showVerification && (\r\n              <div\r\n                id=\"verify-account\"\r\n                className=\"content spartan\"\r\n                style={{\r\n                  lineHeight: \"initial\",\r\n                  color: \"dimgray\"\r\n                }}\r\n              >\r\n                <div\r\n                  id=\"verify-go-back\"\r\n                  className=\"pb-4\"\r\n                  style={{ cursor: \"pointer\", color: \"dodgerblue\" }}\r\n                  onClick={() => this.setState({ showVerification: false })}\r\n                >\r\n                  <i className=\"fas fa-chevron-left\"></i>\r\n                  <span className=\"ml-1\">Edit info</span>\r\n                </div>\r\n                <div>\r\n                  A message has been sent to the phone number you provided with\r\n                  a verification code. Please enter it here.\r\n                </div>\r\n                {/* <!-- Verification input --> */}\r\n                <div className=\"form-group py-2\">\r\n                  <label>5-digit verification code</label>\r\n                  <input\r\n                    onChange={ev =>\r\n                      this.setState({ verificationCodeInput: ev.target.value })\r\n                    }\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"v-code\"\r\n                  ></input>\r\n                </div>\r\n                <button\r\n                  id=\"verify-account-go\"\r\n                  className=\"btn btn-success mr-2\"\r\n                  onClick={this.verifyCode}\r\n                >\r\n                  Verify\r\n                </button>\r\n                <button\r\n                  id=\"verify-resend-go\"\r\n                  className=\"btn btn-primary\"\r\n                  onClick={this.verifyAccount}\r\n                >\r\n                  Re-send\r\n                </button>\r\n                <div\r\n                  id=\"verify-form-error\"\r\n                  className=\"spartan pt-2\"\r\n                  style={{\r\n                    fontSize: \"x-small\",\r\n                    color: \"red\",\r\n                    textAlign: \"center\"\r\n                  }}\r\n                >\r\n                  {this.state.verifyCodeError}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateAccount;\r\n"]},"metadata":{},"sourceType":"module"}