{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\xmark\\\\Desktop\\\\Code\\\\Servers\\\\Qumoc\\\\food-commune\\\\src\\\\components\\\\PasswordReset.jsx\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass PasswordReset extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formHeader: \"Password Reset\",\n      formError: null,\n      recoverInput: undefined,\n      userFound: false,\n      password1: undefined,\n      password2: undefined,\n      vCode: undefined,\n      vCodeInput: undefined\n    };\n\n    this.resetGo = () => {\n      let input = this.state.recoverInput;\n\n      if (input === undefined) {\n        this.setState({\n          formError: \"No input entered\"\n        });\n      } else {\n        // parse for email or phone\n        if (input.includes(\"@\") && input.includes(\".\")) {\n          console.log(\"email\");\n          input.trim();\n          getUser(`profile.email eq \"${input}\"`);\n        } else {\n          let format = input.replace(/\\W/g, \"\");\n          format = format[0] == 1 ? format.substring(1) : format;\n\n          if (isNaN(format)) {\n            this.setState({\n              formError: \"Input is neither a phone number or email\"\n            });\n          } else if (format.length < 9 || format.length > 11) {\n            this.setState({\n              formError: \"Not a valid phone number\"\n            });\n          } else {\n            console.log(\"phone\", format);\n            getUser(`profile.mobilePhone eq \"${format}\"`);\n          }\n        }\n      }\n    };\n\n    this.getUser = query => {\n      let options = {\n        method: \"GET\",\n        mode: \"same-origin\",\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      fetch(`/foodcommune/site/finduser?queryparams=${query}`, options).then(res => {\n        if (res) return res.json();\n      }).then(res => {\n        console.log(res);\n        this.startChangePasswordFlow(res.login, res.phone);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.startChangePasswordFlow = (login, phone) => {\n      // Toggle view\n      this.setState({\n        userFound: true\n      }); // Generate 5 digit-verification code\n\n      let verificaiton = Math.floor(Math.random() * 10000) * new Date().getTime();\n      let digits = verificaiton.toString().substr(0, 5);\n      this.setState({\n        vCode: digits,\n        login: login\n      }); // Send digits to profile creator\n\n      let options = {\n        method: \"POST\",\n        mode: \"same-origin\",\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          entity: {\n            phone: phone,\n            code: digits\n          }\n        })\n      };\n      fetch(\"/foodcommune/site/verify\", options).then(res => {\n        if (res) return res.json();\n      }).then(res => {\n        console.log(res);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.setPassword = () => {\n      // Verification code match\n      if (this.state.vCode != this.state.vCodeInput) {\n        this.setState({\n          formError: \"5-digit code does not match!\"\n        });\n        return;\n      } // Verify password match\n\n\n      if (this.state.password1 !== this.state.password2) {\n        this.setState({\n          formError: \"Passwords do not match. Please re-type passwords\"\n        });\n        return; // Stop account flow\n      } else {\n        this.setState({\n          formError: null\n        });\n      } // Verify password length\n\n\n      if (this.state.password1.length < 8) {\n        this.setState({\n          formError: \"Passwords must be at least 8 characters!\"\n        });\n        return;\n      } // Send request to Okta to change the password on the users account\n\n\n      let options = {\n        method: \"POST\",\n        mode: \"same-origin\",\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          entity: {\n            login: this.state.login,\n            newPassword: this.state.password1\n          }\n        })\n      };\n      fetch(\"/foodcommune/site/changepassword\", options).then(res => {\n        if (res) return res.json();\n      }).then(res => {\n        if (!res.res) {\n          this.setState({\n            formError: res.msg\n          });\n        } else {\n          this.setState({\n            formHeader: \"Your password has been reset!\"\n          });\n          setTimeout(() => {\n            /*#__PURE__*/\n            React.createElement(Link, {\n              to: \"/foodcommune\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 13\n              }\n            });\n          }, 3000);\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // <!-- ROW -->\n      React.createElement(\"div\", {\n        id: \"main-content\",\n        className: \"row row-border justify-content-center py-5\",\n        style: {\n          position: \"relative\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 7\n        }\n      }, this.state.userFound && /*#__PURE__*/React.createElement(\"div\", {\n        id: \"login-help\",\n        className: \"col spartan\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }\n      }, this.state.formHeader), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row py-4 justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          borderRadius: \"5px\",\n          padding: \"20px\",\n          backgroundColor: \"white\",\n          fontSize: \"small\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        for: \"recover-input\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }\n      }, \"Enter an email or phone number associated with the account.\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"recover-input\",\n        placeholder: \"email or phone\",\n        onChange: ev => {\n          this.setState({\n            recoverInput: ev.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }\n      }, \"Phone numbers do not require special characters (\\\"-\\\" or \\\"()\\\")\")), /*#__PURE__*/React.createElement(\"button\", {\n        id: \"recover-go\",\n        className: \"btn btn-success\",\n        onClick: this.resetGo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 19\n        }\n      }, \"Reset\"), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"form-error\",\n        className: \"spartan pt-2\",\n        style: \"font-size: x-small; color: red; text-align: center;\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 19\n        }\n      }))))), !this.state.userFound && /*#__PURE__*/React.createElement(\"div\", {\n        id: \"change-password\",\n        className: \"col spartan\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }\n      }, \"Create New Password\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row py-4 justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          borderRadius: \"5px\",\n          padding: \"20px\",\n          backgroundColor: \"white\",\n          fontSize: \"small\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        for: \"InputPassword1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }\n      }, \"Create Password\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 23\n        }\n      }, \"Must be least 8 characters, a lowercase letter, an uppercase letter, a number, no parts of your username.\")), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"password\",\n        className: \"form-control\",\n        id: \"InputPassword1\",\n        onChange: ev => {\n          this.setState({\n            password1: ev.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        for: \"InputPassword2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 21\n        }\n      }, \"Re-type Password\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"password\",\n        className: \"form-control\",\n        id: \"InputPassword2\",\n        onChange: ev => {\n          this.setState({\n            password2: ev.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        for: \"v-code\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 21\n        }\n      }, \"5-digit verification code\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 23\n        }\n      }, \"Sent to phone number associated with your account.\")), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"v-code\",\n        onChange: ev => {\n          this.setState({\n            vCodeInput: ev.target.value\n          });\n        },\n        style: {\n          width: \"100px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"button\", {\n        id: \"set-password-go\",\n        className: \"btn btn-success\",\n        onClick: this.setPassword,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 19\n        }\n      }, \"Change password\"), this.state.recoverInput && /*#__PURE__*/React.createElement(\"div\", {\n        id: \"password-form-error\",\n        className: \"spartan pt-2\",\n        style: {\n          fontSize: \"x-small\",\n          color: \"red\",\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 21\n        }\n      }, this.state.recoverInput))))))\n    );\n  }\n\n}\n\nexport default PasswordReset;","map":{"version":3,"sources":["C:/Users/xmark/Desktop/Code/Servers/Qumoc/food-commune/src/components/PasswordReset.jsx"],"names":["React","Component","Link","PasswordReset","state","formHeader","formError","recoverInput","undefined","userFound","password1","password2","vCode","vCodeInput","resetGo","input","setState","includes","console","log","trim","getUser","format","replace","substring","isNaN","length","query","options","method","mode","credentials","headers","fetch","then","res","json","startChangePasswordFlow","login","phone","catch","err","verificaiton","Math","floor","random","Date","getTime","digits","toString","substr","body","JSON","stringify","entity","code","setPassword","newPassword","msg","setTimeout","render","position","borderRadius","padding","backgroundColor","fontSize","ev","target","value","width","color","textAlign"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass PasswordReset extends Component {\r\n  state = {\r\n    formHeader: \"Password Reset\",\r\n    formError: null,\r\n    recoverInput: undefined,\r\n    userFound: false,\r\n    password1: undefined,\r\n    password2: undefined,\r\n    vCode: undefined,\r\n    vCodeInput: undefined\r\n  };\r\n\r\n  resetGo = () => {\r\n    let input = this.state.recoverInput;\r\n    if (input === undefined) {\r\n      this.setState({ formError: \"No input entered\" });\r\n    } else {\r\n      // parse for email or phone\r\n      if (input.includes(\"@\") && input.includes(\".\")) {\r\n        console.log(\"email\");\r\n        input.trim();\r\n        getUser(`profile.email eq \"${input}\"`);\r\n      } else {\r\n        let format = input.replace(/\\W/g, \"\");\r\n        format = format[0] == 1 ? format.substring(1) : format;\r\n        if (isNaN(format)) {\r\n          this.setState({\r\n            formError: \"Input is neither a phone number or email\"\r\n          });\r\n        } else if (format.length < 9 || format.length > 11) {\r\n          this.setState({ formError: \"Not a valid phone number\" });\r\n        } else {\r\n          console.log(\"phone\", format);\r\n          getUser(`profile.mobilePhone eq \"${format}\"`);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  getUser = query => {\r\n    let options = {\r\n      method: \"GET\",\r\n      mode: \"same-origin\",\r\n      credentials: \"same-origin\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    };\r\n\r\n    fetch(`/foodcommune/site/finduser?queryparams=${query}`, options)\r\n      .then(res => {\r\n        if (res) return res.json();\r\n      })\r\n      .then(res => {\r\n        console.log(res);\r\n        this.startChangePasswordFlow(res.login, res.phone);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  startChangePasswordFlow = (login, phone) => {\r\n    // Toggle view\r\n    this.setState({ userFound: true });\r\n    // Generate 5 digit-verification code\r\n    let verificaiton = Math.floor(Math.random() * 10000) * new Date().getTime();\r\n    let digits = verificaiton.toString().substr(0, 5);\r\n    this.setState({ vCode: digits, login: login });\r\n\r\n    // Send digits to profile creator\r\n    let options = {\r\n      method: \"POST\",\r\n      mode: \"same-origin\",\r\n      credentials: \"same-origin\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({ entity: { phone: phone, code: digits } })\r\n    };\r\n\r\n    fetch(\"/foodcommune/site/verify\", options)\r\n      .then(res => {\r\n        if (res) return res.json();\r\n      })\r\n      .then(res => {\r\n        console.log(res);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  setPassword = () => {\r\n    // Verification code match\r\n    if (this.state.vCode != this.state.vCodeInput) {\r\n      this.setState({ formError: \"5-digit code does not match!\" });\r\n      return;\r\n    }\r\n\r\n    // Verify password match\r\n    if (this.state.password1 !== this.state.password2) {\r\n      this.setState({\r\n        formError: \"Passwords do not match. Please re-type passwords\"\r\n      });\r\n      return; // Stop account flow\r\n    } else {\r\n      this.setState({ formError: null });\r\n    }\r\n\r\n    // Verify password length\r\n    if (this.state.password1.length < 8) {\r\n      this.setState({ formError: \"Passwords must be at least 8 characters!\" });\r\n      return;\r\n    }\r\n\r\n    // Send request to Okta to change the password on the users account\r\n    let options = {\r\n      method: \"POST\",\r\n      mode: \"same-origin\",\r\n      credentials: \"same-origin\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        entity: { login: this.state.login, newPassword: this.state.password1 }\r\n      })\r\n    };\r\n\r\n    fetch(\"/foodcommune/site/changepassword\", options)\r\n      .then(res => {\r\n        if (res) return res.json();\r\n      })\r\n      .then(res => {\r\n        if (!res.res) {\r\n          this.setState({ formError: res.msg });\r\n        } else {\r\n          this.setState({ formHeader: \"Your password has been reset!\" });\r\n          setTimeout(() => {\r\n            <Link to=\"/foodcommune\"></Link>;\r\n          }, 3000);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      // <!-- ROW -->\r\n      <div\r\n        id=\"main-content\"\r\n        className=\"row row-border justify-content-center py-5\"\r\n        style={{ position: \"relative\" }}\r\n      >\r\n        {/* Enter phone or email */}\r\n        {this.state.userFound && (\r\n          <div id=\"login-help\" className=\"col spartan\">\r\n            <div className=\"row justify-content-center\">\r\n              {this.state.formHeader}\r\n            </div>\r\n            <div className=\"row py-4 justify-content-center\">\r\n              <div className=\"col-md-4\">\r\n                <div\r\n                  style={{\r\n                    borderRadius: \"5px\",\r\n                    padding: \"20px\",\r\n                    backgroundColor: \"white\",\r\n                    fontSize: \"small\"\r\n                  }}\r\n                >\r\n                  {/* <!-- email or phone number --> */}\r\n                  <div className=\"form-group\">\r\n                    <label for=\"recover-input\">\r\n                      Enter an email or phone number associated with the\r\n                      account.\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      id=\"recover-input\"\r\n                      placeholder=\"email or phone\"\r\n                      onChange={ev => {\r\n                        this.setState({ recoverInput: ev.target.value });\r\n                      }}\r\n                    ></input>\r\n                    <small className=\"text-muted\">\r\n                      Phone numbers do not require special characters (\"-\" or\r\n                      \"()\")\r\n                    </small>\r\n                  </div>\r\n                  <button\r\n                    id=\"recover-go\"\r\n                    className=\"btn btn-success\"\r\n                    onClick={this.resetGo}\r\n                  >\r\n                    Reset\r\n                  </button>\r\n                  <div\r\n                    id=\"form-error\"\r\n                    className=\"spartan pt-2\"\r\n                    style=\"font-size: x-small; color: red; text-align: center;\"\r\n                  ></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        {/* Enter New password and 5 digit code */}\r\n        {!this.state.userFound && (\r\n          <div id=\"change-password\" className=\"col spartan\">\r\n            <div className=\"row justify-content-center\">\r\n              Create New Password\r\n            </div>\r\n            <div className=\"row py-4 justify-content-center\">\r\n              <div className=\"col-md-4\">\r\n                <div\r\n                  style={{\r\n                    borderRadius: \"5px\",\r\n                    padding: \"20px\",\r\n                    backgroundColor: \"white\",\r\n                    fontSize: \"small\"\r\n                  }}\r\n                >\r\n                  {/* <!-- password --> */}\r\n                  <div className=\"form-group\">\r\n                    <label for=\"InputPassword1\">Create Password</label>\r\n                    <div>\r\n                      <small className=\"text-muted\">\r\n                        Must be least 8 characters, a lowercase letter, an\r\n                        uppercase letter, a number, no parts of your username.\r\n                      </small>\r\n                    </div>\r\n                    <input\r\n                      type=\"password\"\r\n                      className=\"form-control\"\r\n                      id=\"InputPassword1\"\r\n                      onChange={ev => {\r\n                        this.setState({ password1: ev.target.value });\r\n                      }}\r\n                    ></input>\r\n                  </div>\r\n                  {/* <!-- password verify--> */}\r\n                  <div className=\"form-group\">\r\n                    <label for=\"InputPassword2\">Re-type Password</label>\r\n                    <input\r\n                      type=\"password\"\r\n                      className=\"form-control\"\r\n                      id=\"InputPassword2\"\r\n                      onChange={ev => {\r\n                        this.setState({ password2: ev.target.value });\r\n                      }}\r\n                    ></input>\r\n                  </div>\r\n                  {/* <!-- Verificaiton code--> */}\r\n                  <div className=\"form-group\">\r\n                    <label for=\"v-code\">5-digit verification code</label>\r\n                    <div>\r\n                      <small className=\"text-muted\">\r\n                        Sent to phone number associated with your account.\r\n                      </small>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      id=\"v-code\"\r\n                      onChange={ev => {\r\n                        this.setState({ vCodeInput: ev.target.value });\r\n                      }}\r\n                      style={{ width: \"100px\" }}\r\n                    ></input>\r\n                  </div>\r\n                  <button\r\n                    id=\"set-password-go\"\r\n                    className=\"btn btn-success\"\r\n                    onClick={this.setPassword}\r\n                  >\r\n                    Change password\r\n                  </button>\r\n                  {this.state.recoverInput && (\r\n                    <div\r\n                      id=\"password-form-error\"\r\n                      className=\"spartan pt-2\"\r\n                      style={{\r\n                        fontSize: \"x-small\",\r\n                        color: \"red\",\r\n                        textAlign: \"center\"\r\n                      }}\r\n                    >\r\n                      {this.state.recoverInput}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PasswordReset;\r\n"]},"metadata":{},"sourceType":"module"}