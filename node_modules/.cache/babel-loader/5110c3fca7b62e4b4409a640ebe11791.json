{"ast":null,"code":"/**\r\n *  PEPPER REDUX STORE - REDUCER\r\n * \r\n */\nimport { session } from '../../util/okta';\nconst initialState = {\n  user: null,\n  provisional: null,\n  token: null,\n  sessionExists: null\n};\n\nfunction rootReducer(state = initialState, action) {\n  if (Object.keys(reducers).includes(action.type)) {\n    return reducers[action.type](state, action.payload);\n  } else {\n    return state;\n  }\n}\n\n;\nlet reducers = {};\n\nreducers.OKTA_SESSION = state => {\n  session().then(resolved => {\n    console.log('OKTA SESSION', resolved);\n    return { ...state,\n      sessionExists: resolved\n    };\n  }).catch(err => {\n    console.log(err);\n  });\n  return {};\n};\n\nreducers.DIALPAD_SHOW = (state, payload) => {\n  let toggle = state.UI.dialPadShow ? false : true;\n  let dialPadShow = payload === \"toggle\" ? toggle : payload;\n  let UI = { ...state.UI,\n    dialPadShow: dialPadShow\n  };\n  return { ...state,\n    UI\n  };\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["C:/Users/xmark/Desktop/Code/Servers/Qumoc/food-commune/src/store/reducers/index.js"],"names":["session","initialState","user","provisional","token","sessionExists","rootReducer","state","action","Object","keys","reducers","includes","type","payload","OKTA_SESSION","then","resolved","console","log","catch","err","DIALPAD_SHOW","toggle","UI","dialPadShow"],"mappings":"AAAA;;;;AAIA,SAASA,OAAT,QAAwB,iBAAxB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,IADW;AAEjBC,EAAAA,WAAW,EAAE,IAFI;AAGjBC,EAAAA,KAAK,EAAE,IAHU;AAIjBC,EAAAA,aAAa,EAAE;AAJE,CAArB;;AAQA,SAASC,WAAT,CAAqBC,KAAK,GAAGN,YAA7B,EAA2CO,MAA3C,EAAmD;AAC/C,MAAIC,MAAM,CAACC,IAAP,CAAYC,QAAZ,EAAsBC,QAAtB,CAA+BJ,MAAM,CAACK,IAAtC,CAAJ,EAAiD;AAC7C,WAAOF,QAAQ,CAACH,MAAM,CAACK,IAAR,CAAR,CAAsBN,KAAtB,EAA6BC,MAAM,CAACM,OAApC,CAAP;AACH,GAFD,MAEO;AACH,WAAOP,KAAP;AACH;AACJ;;AAAA;AAED,IAAII,QAAQ,GAAG,EAAf;;AAEAA,QAAQ,CAACI,YAAT,GAAyBR,KAAD,IAAW;AAC/BP,EAAAA,OAAO,GACFgB,IADL,CACUC,QAAQ,IAAI;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,QAA5B;AACA,WAAO,EAAC,GAAGV,KAAJ;AAAWF,MAAAA,aAAa,EAAEY;AAA1B,KAAP;AACH,GAJL,EAKKG,KALL,CAKWC,GAAG,IAAI;AACVH,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACH,GAPL;AASA,SAAO,EAAP;AACH,CAXD;;AAaAV,QAAQ,CAACW,YAAT,GAAwB,CAACf,KAAD,EAAQO,OAAR,KAAoB;AACxC,MAAIS,MAAM,GAAGhB,KAAK,CAACiB,EAAN,CAASC,WAAT,GAAuB,KAAvB,GAA+B,IAA5C;AACA,MAAIA,WAAW,GAAGX,OAAO,KAAK,QAAZ,GAAuBS,MAAvB,GAAgCT,OAAlD;AACA,MAAIU,EAAE,GAAG,EAAE,GAAGjB,KAAK,CAACiB,EAAX;AAAeC,IAAAA,WAAW,EAAEA;AAA5B,GAAT;AACA,SAAO,EAAE,GAAGlB,KAAL;AAAYiB,IAAAA;AAAZ,GAAP;AACH,CALD;;AASA,eAAelB,WAAf","sourcesContent":["/**\r\n *  PEPPER REDUX STORE - REDUCER\r\n * \r\n */\r\nimport { session } from '../../util/okta';\r\n\r\nconst initialState = {\r\n    user: null,\r\n    provisional: null,\r\n    token: null,\r\n    sessionExists: null\r\n\r\n};\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n    if (Object.keys(reducers).includes(action.type)) {\r\n        return reducers[action.type](state, action.payload);\r\n    } else {\r\n        return state;\r\n    }\r\n};\r\n\r\nlet reducers = {};\r\n\r\nreducers.OKTA_SESSION = (state) => {\r\n    session()\r\n        .then(resolved => {\r\n            console.log('OKTA SESSION', resolved);\r\n            return {...state, sessionExists: resolved}\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        })\r\n\r\n    return {};\r\n}\r\n\r\nreducers.DIALPAD_SHOW = (state, payload) => {\r\n    let toggle = state.UI.dialPadShow ? false : true;\r\n    let dialPadShow = payload === \"toggle\" ? toggle : payload;\r\n    let UI = { ...state.UI, dialPadShow: dialPadShow };\r\n    return { ...state, UI }\r\n}\r\n\r\n\r\n\r\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}