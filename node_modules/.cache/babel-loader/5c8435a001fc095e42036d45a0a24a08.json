{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\xmark\\\\Desktop\\\\Code\\\\Servers\\\\Qumoc\\\\food-commune\\\\src\\\\components\\\\CreateAccount.jsx\";\nimport React, { Component } from \"react\";\nimport { signInAuthenticate } from \"../util/okta\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nclass CreateAccount extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      form: {\n        email: \"\",\n        passwordA: \"\",\n        passwordB: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        phoneNumber: \"\"\n      },\n      validate: false,\n      errMsg: \"\",\n      showVerification: false,\n      verificationCode: \"\",\n      verificationCodeInput: \"\",\n      verifyCodeError: \"\",\n      redirectToDash: false\n    };\n\n    this.setFormData = obj => {\n      this.setState(prevState => {\n        let form = { ...prevState.form,\n          ...obj\n        };\n        return {\n          form: form\n        };\n      });\n    };\n\n    this.closeAccountWindow = ev => {\n      if (ev.target.id === \"account-wrapper\") this.props.createAccount();\n    };\n\n    this.startCreateAccount = () => {\n      let form = this.state.form;\n      let formErrors = 0; // High light fields left blank\n\n      Object.keys(form).forEach(key => {\n        if (form[key] === \"\") {\n          formErrors++;\n        }\n      });\n\n      if (formErrors > 0) {\n        // Stop account flow on form errors\n        this.setState({\n          validate: true\n        });\n        console.log(\"error\");\n        return;\n      } // Verify email\n\n\n      if (!form.email.includes(\"@\") || !form.email.includes(\".\")) {\n        this.setState({\n          errMsg: \"Email is not valid\"\n        });\n        return;\n      } // Verify password match\n\n\n      if (form.passwordA !== form.passwordB) {\n        this.setState({\n          errMsg: \"Passwords do not match. Please re-type passwords\"\n        });\n        return; // Stop account flow\n      } else {\n        this.setState({\n          errMsg: \"\"\n        });\n      } // Verify containt upper and lower case and a number\n\n\n      let matchEXP = /^(?:(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).*)$/;\n\n      if (!form.passwordA.match(matchEXP)) {\n        this.setState({\n          errMsg: \"Password does not meet criteria!\"\n        });\n        return;\n      } // Verify password length\n\n\n      if (form.passwordA.length < 8) {\n        this.setState({\n          errMsg: \"Passwords must be at least 8 characters!\"\n        });\n        return;\n      } // Verify phone number\n\n\n      let format = form.phoneNumber.replace(/\\W/g, \"\");\n      format = format[0] == 1 ? format.substring(1) : format;\n\n      if (format.length < 10 || format.length > 10) {\n        this.setState({\n          errMsg: \"Not a valid phone number\"\n        });\n        return;\n      } else {\n        console.log(\"phone\", format);\n      }\n\n      this.verifyAccount();\n    };\n\n    this.verifyAccount = () => {\n      this.setState({\n        showVerification: true,\n        errMsg: \"\",\n        verificationCodeInput: \"\",\n        verifyCodeError: \"\"\n      });\n      /**** TESTING */\n      // return;\n      // Generate 5 digit-verification code\n\n      let verificaiton = Math.floor(Math.random() * 10000) * new Date().getTime();\n      let digits = verificaiton.toString().substr(0, 5);\n      this.setState({\n        verificationCode: digits\n      }); // Send digits to profile creator\n\n      var options = {\n        method: \"POST\",\n        headers: new Headers({\n          Authorization: \"Bearer \" + this.props.provisional,\n          \"Content-Type\": \"application/json\"\n        }),\n        body: JSON.stringify({\n          entity: JSON.stringify({\n            phone: this.state.form.phoneNumber,\n            code: digits\n          })\n        })\n      };\n      fetch(\"https://qumoc.com/foodcommune/site/verify\", options).then(res => {\n        return res.json();\n      }).then(res => {\n        console.log(res);\n      });\n    };\n\n    this.verifyCode = () => {\n      // Accept verification input\n      if (this.state.verificationCodeInput === this.state.verificationCode) {\n        this.insertUser();\n        console.log(\"ACCOUNT/PHONE VERIFIED\");\n      } else {\n        this.setState({\n          verifyCodeError: \"The digits you entered do not match!\"\n        });\n      }\n    };\n\n    this.insertUser = () => {\n      let data = {\n        firstName: this.state.form.firstName,\n        lastName: this.state.form.lastName,\n        email: this.state.form.email,\n        phoneNumber: this.state.form.phoneNumber,\n        password: this.state.form.passwordA\n      }; // console.log(\"provisional\", this.props.provisional);\n\n      var options = {\n        method: \"POST\",\n        // headers: new Headers({\n        //   Authorization: \"Bearer \" + this.props.provisional,\n        //   \"Content-Type\": \"application/json\"\n        // }),\n        body: JSON.stringify({\n          entity: JSON.stringify(data)\n        })\n      };\n      fetch(\"https://qumoc.com/foodcommune/site/createOktaAccount\", options).then(res => {\n        return res.json();\n      }).then(res => {\n        if (!res.success) {\n          // Return to account detail and display error message\n          console.log(res);\n          this.setState({\n            showVerification: false,\n            errMsg: res.msg\n          });\n        } else {\n          fetch(\"https://qumoc.com/foodcommune/site/createFCAccount\", options).then(res => {\n            if (res) res.json();\n          }).then(res => {\n            if (res.success) {\n              this.signInUser();\n            }\n          });\n        }\n      });\n    };\n\n    this.signInUser = async () => {\n      let res = await signInAuthenticate(this.state.form.email, this.state.form.passwordA); // On successful account creation redirct to dashboard\n\n      if (res) {\n        this.setState({\n          redirectToDash: true\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 7\n      }\n    }, this.state.redirectToDash && /*#__PURE__*/React.createElement(Route, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: \"/foodcommune/dashboard\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"account-wrapper\",\n      onClick: ev => this.closeAccountWindow(ev),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"create-account\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header spartan\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      width: \"40px\",\n      src: require(\"../media/logoAlpha.gif\"),\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 15\n      }\n    }, \"Create Account\")), !this.state.showVerification && /*#__PURE__*/React.createElement(\"div\", {\n      id: \"create-account-form\",\n      className: \"spartan content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 19\n      }\n    }, \"Email address\"), /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.form.email,\n      onChange: ev => this.setFormData({\n        email: ev.target.value\n      }),\n      type: \"email\",\n      className: this.state.validate && this.state.form.email === \"\" ? \"form-control require\" : \"form-control\",\n      id: \"email\",\n      \"aria-describedby\": \"emailHelp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"small\", {\n      id: \"emailHelp\",\n      className: \"form-text text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 19\n      }\n    }, \"We'll never share your email with anyone else.\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 19\n      }\n    }, \"Create Password\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"small\", {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 21\n      }\n    }, \"Must be least 8 characters, a lowercase letter, an uppercase letter, a number, no parts of your username.\")), /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.form.passwordA,\n      onChange: ev => this.setFormData({\n        passwordA: ev.target.value\n      }),\n      type: \"password\",\n      className: this.state.validate && this.state.form.passwordA === \"\" ? \"form-control require\" : \"form-control\",\n      id: \"InputPassword1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 19\n      }\n    }, \"Re-type Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.form.passwordB,\n      onChange: ev => this.setFormData({\n        passwordB: ev.target.value\n      }),\n      type: \"password\",\n      className: this.state.validate && this.state.form.passwordB === \"\" ? \"form-control require\" : \"form-control\",\n      id: \"InputPassword2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 19\n      }\n    }, \"First Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: this.state.validate && this.state.form.firstName === \"\" ? \"form-control require\" : \"form-control\",\n      id: \"fname\",\n      value: this.state.form.firstName,\n      onChange: ev => this.setFormData({\n        firstName: ev.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 19\n      }\n    }, \"Last Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: this.state.validate && this.state.form.lastName === \"\" ? \"form-control require\" : \"form-control\",\n      id: \"lname\",\n      value: this.state.form.lastName,\n      onChange: ev => this.setFormData({\n        lastName: ev.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 19\n      }\n    }, \"Phone Number\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"phone\",\n      className: this.state.validate && this.state.form.phoneNumber === \"\" ? \"form-control require\" : \"form-control\",\n      id: \"phone\",\n      value: this.state.form.phoneNumber,\n      onChange: ev => this.setFormData({\n        phoneNumber: ev.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"small\", {\n      className: \"form-text text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 19\n      }\n    }, \"You will receive a SMS to verify your profile.\")), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"create-account-go\",\n      className: \"btn btn-primary\",\n      onClick: this.startCreateAccount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 17\n      }\n    }, \"Create\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"form-error\",\n      className: \"spartan pt-2\",\n      style: {\n        fontSize: \"x-small\",\n        color: \"red\",\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 17\n      }\n    }, this.state.errMsg)), this.state.showVerification && /*#__PURE__*/React.createElement(\"div\", {\n      id: \"verify-account\",\n      className: \"content spartan\",\n      style: {\n        lineHeight: \"initial\",\n        color: \"dimgray\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"verify-go-back\",\n      className: \"pb-4\",\n      style: {\n        cursor: \"pointer\",\n        color: \"dodgerblue\"\n      },\n      onClick: () => this.setState({\n        showVerification: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-chevron-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"ml-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 19\n      }\n    }, \"Edit info\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 17\n      }\n    }, \"A message has been sent to the phone number you provided with a verification code. Please enter it here.\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group py-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 19\n      }\n    }, \"5-digit verification code\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: ev => this.setState({\n        verificationCodeInput: ev.target.value\n      }),\n      type: \"text\",\n      className: \"form-control\",\n      id: \"v-code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"verify-account-go\",\n      className: \"btn btn-success mr-2\",\n      onClick: this.verifyCode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 17\n      }\n    }, \"Verify\"), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"verify-resend-go\",\n      className: \"btn btn-primary\",\n      onClick: this.verifyAccount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 17\n      }\n    }, \"Re-send\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"verify-form-error\",\n      className: \"spartan pt-2\",\n      style: {\n        fontSize: \"x-small\",\n        color: \"red\",\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 17\n      }\n    }, this.state.verifyCodeError)))));\n  }\n\n}\n\nexport default CreateAccount;","map":{"version":3,"sources":["C:/Users/xmark/Desktop/Code/Servers/Qumoc/food-commune/src/components/CreateAccount.jsx"],"names":["React","Component","signInAuthenticate","Route","Redirect","CreateAccount","state","form","email","passwordA","passwordB","firstName","lastName","phoneNumber","validate","errMsg","showVerification","verificationCode","verificationCodeInput","verifyCodeError","redirectToDash","setFormData","obj","setState","prevState","closeAccountWindow","ev","target","id","props","createAccount","startCreateAccount","formErrors","Object","keys","forEach","key","console","log","includes","matchEXP","match","length","format","replace","substring","verifyAccount","verificaiton","Math","floor","random","Date","getTime","digits","toString","substr","options","method","headers","Headers","Authorization","provisional","body","JSON","stringify","entity","phone","code","fetch","then","res","json","verifyCode","insertUser","data","password","success","msg","signInUser","render","pathname","require","value","fontSize","color","textAlign","lineHeight","cursor"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { signInAuthenticate } from \"../util/okta\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nclass CreateAccount extends Component {\r\n  state = {\r\n    form: {\r\n      email: \"\",\r\n      passwordA: \"\",\r\n      passwordB: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      phoneNumber: \"\"\r\n    },\r\n    validate: false,\r\n    errMsg: \"\",\r\n    showVerification: false,\r\n    verificationCode: \"\",\r\n    verificationCodeInput: \"\",\r\n    verifyCodeError: \"\",\r\n    redirectToDash: false\r\n  };\r\n\r\n  setFormData = obj => {\r\n    this.setState(prevState => {\r\n      let form = { ...prevState.form, ...obj };\r\n      return { form: form };\r\n    });\r\n  };\r\n\r\n  closeAccountWindow = ev => {\r\n    if (ev.target.id === \"account-wrapper\") this.props.createAccount();\r\n  };\r\n\r\n  startCreateAccount = () => {\r\n    let form = this.state.form;\r\n    let formErrors = 0;\r\n    // High light fields left blank\r\n    Object.keys(form).forEach(key => {\r\n      if (form[key] === \"\") {\r\n        formErrors++;\r\n      }\r\n    });\r\n\r\n    if (formErrors > 0) {\r\n      // Stop account flow on form errors\r\n      this.setState({ validate: true });\r\n      console.log(\"error\");\r\n      return;\r\n    }\r\n\r\n    // Verify email\r\n    if (!form.email.includes(\"@\") || !form.email.includes(\".\")) {\r\n      this.setState({ errMsg: \"Email is not valid\" });\r\n      return;\r\n    }\r\n\r\n    // Verify password match\r\n    if (form.passwordA !== form.passwordB) {\r\n      this.setState({\r\n        errMsg: \"Passwords do not match. Please re-type passwords\"\r\n      });\r\n      return; // Stop account flow\r\n    } else {\r\n      this.setState({ errMsg: \"\" });\r\n    }\r\n\r\n    // Verify containt upper and lower case and a number\r\n    let matchEXP = /^(?:(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).*)$/;\r\n    if (!form.passwordA.match(matchEXP)) {\r\n      this.setState({ errMsg: \"Password does not meet criteria!\" });\r\n      return;\r\n    }\r\n\r\n    // Verify password length\r\n    if (form.passwordA.length < 8) {\r\n      this.setState({ errMsg: \"Passwords must be at least 8 characters!\" });\r\n      return;\r\n    }\r\n\r\n    // Verify phone number\r\n    let format = form.phoneNumber.replace(/\\W/g, \"\");\r\n    format = format[0] == 1 ? format.substring(1) : format;\r\n\r\n    if (format.length < 10 || format.length > 10) {\r\n      this.setState({ errMsg: \"Not a valid phone number\" });\r\n      return;\r\n    } else {\r\n      console.log(\"phone\", format);\r\n    }\r\n\r\n    this.verifyAccount();\r\n  };\r\n\r\n  verifyAccount = () => {\r\n    this.setState({\r\n      showVerification: true,\r\n      errMsg: \"\",\r\n      verificationCodeInput: \"\",\r\n      verifyCodeError: \"\"\r\n    });\r\n\r\n    /**** TESTING */\r\n    // return;\r\n\r\n    // Generate 5 digit-verification code\r\n    let verificaiton = Math.floor(Math.random() * 10000) * new Date().getTime();\r\n    let digits = verificaiton.toString().substr(0, 5);\r\n    this.setState({ verificationCode: digits });\r\n\r\n    // Send digits to profile creator\r\n    var options = {\r\n      method: \"POST\",\r\n      headers: new Headers({\r\n        Authorization: \"Bearer \" + this.props.provisional,\r\n        \"Content-Type\": \"application/json\"\r\n      }),\r\n      body: JSON.stringify({\r\n        entity: JSON.stringify({\r\n          phone: this.state.form.phoneNumber,\r\n          code: digits\r\n        })\r\n      })\r\n    };\r\n\r\n    fetch(\"https://qumoc.com/foodcommune/site/verify\", options)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n      .then(res => {\r\n        console.log(res);\r\n      });\r\n  };\r\n\r\n  verifyCode = () => {\r\n    // Accept verification input\r\n    if (this.state.verificationCodeInput === this.state.verificationCode) {\r\n      this.insertUser();\r\n      console.log(\"ACCOUNT/PHONE VERIFIED\");\r\n    } else {\r\n      this.setState({\r\n        verifyCodeError: \"The digits you entered do not match!\"\r\n      });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * function:        Insert User\r\n   *\r\n   * User account form is sent to Okta via server\r\n   * @param {*} data\r\n   */\r\n  insertUser = () => {\r\n    let data = {\r\n      firstName: this.state.form.firstName,\r\n      lastName: this.state.form.lastName,\r\n      email: this.state.form.email,\r\n      phoneNumber: this.state.form.phoneNumber,\r\n      password: this.state.form.passwordA\r\n    };\r\n\r\n    // console.log(\"provisional\", this.props.provisional);\r\n    var options = {\r\n      method: \"POST\",\r\n      // headers: new Headers({\r\n      //   Authorization: \"Bearer \" + this.props.provisional,\r\n      //   \"Content-Type\": \"application/json\"\r\n      // }),\r\n      body: JSON.stringify({\r\n        entity: JSON.stringify(data)\r\n      })\r\n    };\r\n\r\n    fetch(\"https://qumoc.com/foodcommune/site/createOktaAccount\", options)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n      .then(res => {\r\n        if (!res.success) {\r\n          // Return to account detail and display error message\r\n          console.log(res);\r\n          this.setState({\r\n            showVerification: false,\r\n            errMsg: res.msg\r\n          });\r\n        } else {\r\n          fetch(\"https://qumoc.com/foodcommune/site/createFCAccount\", options)\r\n            .then(res => {\r\n              if (res) res.json();\r\n            })\r\n            .then(res => {\r\n              if (res.success) {\r\n                this.signInUser();\r\n              }\r\n            });\r\n        }\r\n      });\r\n  };\r\n\r\n  signInUser = async () => {\r\n    let res = await signInAuthenticate(\r\n      this.state.form.email,\r\n      this.state.form.passwordA\r\n    );\r\n\r\n    // On successful account creation redirct to dashboard\r\n    if (res) {\r\n      this.setState({ redirectToDash: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.state.redirectToDash && (\r\n          <Route>\r\n            <Redirect to={{ pathname: \"/foodcommune/dashboard\" }}></Redirect>\r\n          </Route>\r\n        )}\r\n        {/* // <!-- Create Account --> */}\r\n        <div id=\"account-wrapper\" onClick={ev => this.closeAccountWindow(ev)}>\r\n          <div id=\"create-account\">\r\n            <div className=\"header spartan\">\r\n              <img\r\n                width=\"40px\"\r\n                src={require(\"../media/logoAlpha.gif\")}\r\n                alt=\"\"\r\n              />\r\n              <div>Create Account</div>\r\n            </div>\r\n            {!this.state.showVerification && (\r\n              <div id=\"create-account-form\" className=\"spartan content\">\r\n                {/* <!-- email --> */}\r\n                <div className=\"form-group\">\r\n                  <label>Email address</label>\r\n                  <input\r\n                    value={this.state.form.email}\r\n                    onChange={ev =>\r\n                      this.setFormData({ email: ev.target.value })\r\n                    }\r\n                    type=\"email\"\r\n                    className={\r\n                      this.state.validate && this.state.form.email === \"\"\r\n                        ? \"form-control require\"\r\n                        : \"form-control\"\r\n                    }\r\n                    id=\"email\"\r\n                    aria-describedby=\"emailHelp\"\r\n                  ></input>\r\n                  <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                    We'll never share your email with anyone else.\r\n                  </small>\r\n                </div>\r\n                {/* <!-- password --> */}\r\n                <div className=\"form-group\">\r\n                  <label>Create Password</label>\r\n                  <div>\r\n                    <small className=\"text-muted\">\r\n                      Must be least 8 characters, a lowercase letter, an\r\n                      uppercase letter, a number, no parts of your username.\r\n                    </small>\r\n                  </div>\r\n                  <input\r\n                    value={this.state.form.passwordA}\r\n                    onChange={ev =>\r\n                      this.setFormData({ passwordA: ev.target.value })\r\n                    }\r\n                    type=\"password\"\r\n                    className={\r\n                      this.state.validate && this.state.form.passwordA === \"\"\r\n                        ? \"form-control require\"\r\n                        : \"form-control\"\r\n                    }\r\n                    id=\"InputPassword1\"\r\n                  ></input>\r\n                </div>\r\n                {/* <!-- password verify --> */}\r\n                <div className=\"form-group\">\r\n                  <label>Re-type Password</label>\r\n                  <input\r\n                    value={this.state.form.passwordB}\r\n                    onChange={ev =>\r\n                      this.setFormData({ passwordB: ev.target.value })\r\n                    }\r\n                    type=\"password\"\r\n                    className={\r\n                      this.state.validate && this.state.form.passwordB === \"\"\r\n                        ? \"form-control require\"\r\n                        : \"form-control\"\r\n                    }\r\n                    id=\"InputPassword2\"\r\n                  ></input>\r\n                </div>\r\n                {/* <!-- first name --> */}\r\n                <div className=\"form-group\">\r\n                  <label>First Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={\r\n                      this.state.validate && this.state.form.firstName === \"\"\r\n                        ? \"form-control require\"\r\n                        : \"form-control\"\r\n                    }\r\n                    id=\"fname\"\r\n                    value={this.state.form.firstName}\r\n                    onChange={ev =>\r\n                      this.setFormData({ firstName: ev.target.value })\r\n                    }\r\n                  ></input>\r\n                </div>\r\n                {/* <!-- last name --> */}\r\n                <div className=\"form-group\">\r\n                  <label>Last Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={\r\n                      this.state.validate && this.state.form.lastName === \"\"\r\n                        ? \"form-control require\"\r\n                        : \"form-control\"\r\n                    }\r\n                    id=\"lname\"\r\n                    value={this.state.form.lastName}\r\n                    onChange={ev =>\r\n                      this.setFormData({ lastName: ev.target.value })\r\n                    }\r\n                  ></input>\r\n                </div>\r\n                {/* <!-- Phone --> */}\r\n                <div className=\"form-group\">\r\n                  <label>Phone Number</label>\r\n                  <input\r\n                    type=\"phone\"\r\n                    className={\r\n                      this.state.validate && this.state.form.phoneNumber === \"\"\r\n                        ? \"form-control require\"\r\n                        : \"form-control\"\r\n                    }\r\n                    id=\"phone\"\r\n                    value={this.state.form.phoneNumber}\r\n                    onChange={ev =>\r\n                      this.setFormData({ phoneNumber: ev.target.value })\r\n                    }\r\n                  ></input>\r\n                  <small className=\"form-text text-muted\">\r\n                    You will receive a SMS to verify your profile.\r\n                  </small>\r\n                </div>\r\n\r\n                <button\r\n                  id=\"create-account-go\"\r\n                  className=\"btn btn-primary\"\r\n                  onClick={this.startCreateAccount}\r\n                >\r\n                  Create\r\n                </button>\r\n                <div\r\n                  id=\"form-error\"\r\n                  className=\"spartan pt-2\"\r\n                  style={{\r\n                    fontSize: \"x-small\",\r\n                    color: \"red\",\r\n                    textAlign: \"center\"\r\n                  }}\r\n                >\r\n                  {this.state.errMsg}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* <!-- Text Verification --> */}\r\n            {this.state.showVerification && (\r\n              <div\r\n                id=\"verify-account\"\r\n                className=\"content spartan\"\r\n                style={{\r\n                  lineHeight: \"initial\",\r\n                  color: \"dimgray\"\r\n                }}\r\n              >\r\n                <div\r\n                  id=\"verify-go-back\"\r\n                  className=\"pb-4\"\r\n                  style={{ cursor: \"pointer\", color: \"dodgerblue\" }}\r\n                  onClick={() => this.setState({ showVerification: false })}\r\n                >\r\n                  <i className=\"fas fa-chevron-left\"></i>\r\n                  <span className=\"ml-1\">Edit info</span>\r\n                </div>\r\n                <div>\r\n                  A message has been sent to the phone number you provided with\r\n                  a verification code. Please enter it here.\r\n                </div>\r\n                {/* <!-- Verification input --> */}\r\n                <div className=\"form-group py-2\">\r\n                  <label>5-digit verification code</label>\r\n                  <input\r\n                    onChange={ev =>\r\n                      this.setState({ verificationCodeInput: ev.target.value })\r\n                    }\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"v-code\"\r\n                  ></input>\r\n                </div>\r\n                <button\r\n                  id=\"verify-account-go\"\r\n                  className=\"btn btn-success mr-2\"\r\n                  onClick={this.verifyCode}\r\n                >\r\n                  Verify\r\n                </button>\r\n                <button\r\n                  id=\"verify-resend-go\"\r\n                  className=\"btn btn-primary\"\r\n                  onClick={this.verifyAccount}\r\n                >\r\n                  Re-send\r\n                </button>\r\n                <div\r\n                  id=\"verify-form-error\"\r\n                  className=\"spartan pt-2\"\r\n                  style={{\r\n                    fontSize: \"x-small\",\r\n                    color: \"red\",\r\n                    textAlign: \"center\"\r\n                  }}\r\n                >\r\n                  {this.state.verifyCodeError}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateAccount;\r\n"]},"metadata":{},"sourceType":"module"}