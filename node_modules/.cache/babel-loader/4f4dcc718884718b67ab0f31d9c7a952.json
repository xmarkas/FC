{"ast":null,"code":"/**\r\n * File:        okta.js\r\n * \r\n * Description: \r\n */\nexport const newAuthClient = () => {\n  console.log(\"running auth client..\"); //  Okta browser SDK AuthClient\n\n  var config = {\n    issuer: \"https://dev-236245.okta.com/oauth2/default\",\n    clientId: \"0oa4lqivbsKPbAtfs4x6\",\n    redirectUri: \"https://qumoc.com/foodcommune\",\n    responseMode: \"fragment\",\n    tokenManager: {\n      storage: \"sessionStorage\"\n    },\n    onSessionExpired: function () {\n      console.log(\"re-authorization is required\"); // authClient.getWithRedirect();\n    }\n  }; // AUTH CLIENT\n\n  let auth = new window.OktaAuth(config);\n  this.props.updateParentState({\n    authClient: auth\n  });\n  return auth;\n};\nexport const session = async () => {\n  let authClient = this.state.authClient;\n  let session = await authClient.session.exists(); //.then(function(exists) {\n  // Check for user session\n\n  if (session) {\n    this.setState({\n      session: true\n    });\n    let user = await authClient.session.get(); // $(\"#user\").html(user.login);\n    // Request token for API access\n\n    let options = {\n      method: \"POST\",\n      mode: \"same-origin\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        entity: {\n          login: user.login,\n          request: \"test\"\n        }\n      })\n    };\n    fetch(\"/foodcommune/secure\", options).then(res => {\n      if (res) return res.json();\n    }).then(res => {\n      if (res.success) {\n        if (this.props.setToken) this.props.setToken(res.token);\n        if (this.props.setUser) this.props.setUser(res.user);\n        this.setState({\n          username: res.user.first_name\n        });\n      }\n    }).then(() => {\n      if (this.props.viewData) this.props.viewData();\n    }).catch(err => {\n      console.log(err);\n    });\n  } else {\n    //     this.setState({ session: false });\n    //     console.log(window.location.href)\n    //   If signed out and not on home page redirect\n    //   if (window.location.href !== \"/foodcommune/\") {\n    // setTimeout(function() {\n    //   window.location.replace(\"/foodcommune\");\n    // }, 1);\n    //   }\n    // Get provisional site access\n    let options = {\n      method: \"POST\",\n      mode: \"same-origin\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        access: this.state.provisional\n      })\n    };\n    fetch(\"/foodcommune/secure/provisional\", options).then(res => {\n      return res.json();\n    }).then(res => {\n      this.setState({\n        provisional: res.token\n      });\n      this.props.updateParentState({\n        provisional: res.token\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/xmark/Desktop/Code/Servers/Qumoc/food-commune/src/util/okta.js"],"names":["newAuthClient","console","log","config","issuer","clientId","redirectUri","responseMode","tokenManager","storage","onSessionExpired","auth","window","OktaAuth","props","updateParentState","authClient","session","state","exists","setState","user","get","options","method","mode","credentials","headers","body","JSON","stringify","entity","login","request","fetch","then","res","json","success","setToken","token","setUser","username","first_name","viewData","catch","err","access","provisional"],"mappings":"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","sourcesContent":["/**\r\n * File:        okta.js\r\n * \r\n * Description: \r\n */\r\n\r\nexport const newAuthClient = () => {\r\n    console.log(\"running auth client..\");\r\n    //  Okta browser SDK AuthClient\r\n    var config = {\r\n      issuer: \"https://dev-236245.okta.com/oauth2/default\",\r\n      clientId: \"0oa4lqivbsKPbAtfs4x6\",\r\n      redirectUri: \"https://qumoc.com/foodcommune\",\r\n      responseMode: \"fragment\",\r\n      tokenManager: {\r\n        storage: \"sessionStorage\"\r\n      },\r\n      onSessionExpired: function() {\r\n        console.log(\"re-authorization is required\");\r\n        // authClient.getWithRedirect();\r\n      }\r\n    };\r\n\r\n    // AUTH CLIENT\r\n    let auth = new window.OktaAuth(config);\r\n    this.props.updateParentState({ authClient: auth });\r\n    return auth;\r\n  };\r\n\r\n  export const session = async () => {\r\n    let authClient = this.state.authClient;\r\n    let session = await authClient.session.exists(); //.then(function(exists) {\r\n\r\n    // Check for user session\r\n    if (session) {\r\n      this.setState({ session: true });\r\n      let user = await authClient.session.get();\r\n      // $(\"#user\").html(user.login);\r\n\r\n      // Request token for API access\r\n      let options = {\r\n        method: \"POST\",\r\n        mode: \"same-origin\",\r\n        credentials: \"same-origin\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({ entity: { login: user.login, request: \"test\" } })\r\n      };\r\n\r\n      fetch(\"/foodcommune/secure\", options)\r\n        .then(res => {\r\n          if (res) return res.json();\r\n        })\r\n        .then(res => {\r\n          if (res.success) {\r\n            if (this.props.setToken) this.props.setToken(res.token);\r\n            if (this.props.setUser) this.props.setUser(res.user);\r\n            this.setState({ username: res.user.first_name });\r\n          }\r\n        })\r\n        .then(() => {\r\n          if (this.props.viewData) this.props.viewData();\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      //     this.setState({ session: false });\r\n      //     console.log(window.location.href)\r\n      //   If signed out and not on home page redirect\r\n      //   if (window.location.href !== \"/foodcommune/\") {\r\n      // setTimeout(function() {\r\n      //   window.location.replace(\"/foodcommune\");\r\n      // }, 1);\r\n      //   }\r\n\r\n      // Get provisional site access\r\n      let options = {\r\n        method: \"POST\",\r\n        mode: \"same-origin\",\r\n        credentials: \"same-origin\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({ access: this.state.provisional })\r\n      };\r\n      fetch(\"/foodcommune/secure/provisional\", options)\r\n        .then(res => {\r\n          return res.json();\r\n        })\r\n        .then(res => {\r\n          this.setState({ provisional: res.token });\r\n          this.props.updateParentState({ provisional: res.token });\r\n        })\r\n        .catch(err => {\r\n        console.log(err)\r\n      })\r\n    }\r\n  };"]},"metadata":{},"sourceType":"module"}