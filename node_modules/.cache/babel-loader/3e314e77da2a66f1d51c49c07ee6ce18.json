{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\xmark\\\\Desktop\\\\Code\\\\Servers\\\\Qumoc\\\\food-commune\\\\src\\\\components\\\\PasswordReset.jsx\";\nimport React, { Component } from \"react\";\n\nclass PasswordReset extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formError: null,\n      recoverInput: undefined,\n      userFound: false,\n      password1: undefined,\n      password2: undefined,\n      vCode: undefined\n    };\n\n    this.resetGo = () => {\n      let input = this.state.recoverInput;\n\n      if (input === undefined) {\n        this.setState({\n          formError: \"No input entered\"\n        });\n      } else {\n        // parse for email or phone\n        if (input.includes(\"@\") && input.includes(\".\")) {\n          console.log(\"email\");\n          input.trim();\n          getUser(`profile.email eq \"${input}\"`);\n        } else {\n          let format = input.replace(/\\W/g, \"\");\n          format = format[0] == 1 ? format.substring(1) : format;\n\n          if (isNaN(format)) {\n            this.setState({\n              formError: \"Input is neither a phone number or email\"\n            });\n          } else if (format.length < 9 || format.length > 11) {\n            this.setState({\n              formError: \"Not a valid phone number\"\n            });\n          } else {\n            console.log(\"phone\", format);\n            getUser(`profile.mobilePhone eq \"${format}\"`);\n          }\n        }\n      }\n    };\n\n    this.getUser = query => {\n      let options = {\n        method: \"GET\",\n        mode: \"same-origin\",\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      fetch(`/foodcommune/site/finduser?queryparams=${query}`, options).then(res => {\n        if (res) return res.json();\n      }).then(res => {\n        console.log(res);\n        this.startChangePasswordFlow(res.login, res.phone);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.startChangePasswordFlow = (login, phone) => {\n      // Toggle view\n      this.setState({\n        userFound: true\n      }); // Generate 5 digit-verification code\n\n      let verificaiton = Math.floor(Math.random() * 10000) * new Date().getTime();\n      let digits = verificaiton.toString().substr(0, 5); // Send digits to profile creator\n\n      let options = {\n        method: \"POST\",\n        mode: \"same-origin\",\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          entity: {\n            phone: phone,\n            code: digits\n          }\n        })\n      };\n      fetch(\"/foodcommune/site/verify\", options).then(res => {\n        if (res) return res.json();\n      }).then(res => {\n        console.log(res);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.setPassword = () => {};\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // <!-- ROW -->\n      React.createElement(\"div\", {\n        id: \"main-content\",\n        className: \"row row-border justify-content-center py-5\",\n        style: {\n          position: \"relative\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"login-help\",\n        className: \"col spartan\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }\n      }, \"Password Reset\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row py-4 justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          borderRadius: \"5px\",\n          padding: \"20px\",\n          backgroundColor: \"white\",\n          fontSize: \"small\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        for: \"recover-input\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 19\n        }\n      }, \"Enter an email or phone number associated with the account.\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"recover-input\",\n        placeholder: \"email or phone\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 19\n        }\n      }, \"Phone numbers do not require special characters (\\\"-\\\" or \\\"()\\\")\")), /*#__PURE__*/React.createElement(\"button\", {\n        id: \"recover-go\",\n        className: \"btn btn-success\",\n        onClick: this.resetGo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }\n      }, \"Reset\"), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"form-error\",\n        className: \"spartan pt-2\",\n        style: \"font-size: x-small; color: red; text-align: center;\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }\n      }))))), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"change-password\",\n        className: \"col spartan\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }\n      }, \"Create New Password\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row py-4 justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: \"border-radius: 5px; padding: 20px; background-color: white;font-size: small;\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        for: \"InputPassword1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 19\n        }\n      }, \"Create Password\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }\n      }, \"Must be least 8 characters, a lowercase letter, an uppercase letter, a number, no parts of your username.\")), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"password\",\n        className: \"form-control\",\n        id: \"InputPassword1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        for: \"InputPassword2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 19\n        }\n      }, \"Re-type Password\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"password\",\n        className: \"form-control\",\n        id: \"InputPassword2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        for: \"v-code\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 19\n        }\n      }, \"5-digit verification code\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }\n      }, \"Sent to phone number associated with your account.\")), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"v-code\",\n        style: \"width:100px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"button\", {\n        id: \"set-password-go\",\n        className: \"btn btn-success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 17\n        }\n      }, \"Change password\"), this.state.recoverInput && /*#__PURE__*/React.createElement(\"div\", {\n        id: \"password-form-error\",\n        className: \"spartan pt-2\",\n        style: {\n          fontSize: \"x-small\",\n          color: \"red\",\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 19\n        }\n      }, this.state.recoverInput))))))\n    );\n  }\n\n}\n\nexport default PasswordReset;","map":{"version":3,"sources":["C:/Users/xmark/Desktop/Code/Servers/Qumoc/food-commune/src/components/PasswordReset.jsx"],"names":["React","Component","PasswordReset","state","formError","recoverInput","undefined","userFound","password1","password2","vCode","resetGo","input","setState","includes","console","log","trim","getUser","format","replace","substring","isNaN","length","query","options","method","mode","credentials","headers","fetch","then","res","json","startChangePasswordFlow","login","phone","catch","err","verificaiton","Math","floor","random","Date","getTime","digits","toString","substr","body","JSON","stringify","entity","code","setPassword","render","position","borderRadius","padding","backgroundColor","fontSize","color","textAlign"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass PasswordReset extends Component {\r\n  state = {\r\n    formError: null,\r\n    recoverInput: undefined,\r\n    userFound: false,\r\n    password1: undefined,\r\n      password2: undefined,\r\n    vCode: undefined\r\n  };\r\n\r\n  resetGo = () => {\r\n    let input = this.state.recoverInput;\r\n    if (input === undefined) {\r\n      this.setState({ formError: \"No input entered\" });\r\n    } else {\r\n      // parse for email or phone\r\n      if (input.includes(\"@\") && input.includes(\".\")) {\r\n        console.log(\"email\");\r\n        input.trim();\r\n        getUser(`profile.email eq \"${input}\"`);\r\n      } else {\r\n        let format = input.replace(/\\W/g, \"\");\r\n        format = format[0] == 1 ? format.substring(1) : format;\r\n        if (isNaN(format)) {\r\n          this.setState({\r\n            formError: \"Input is neither a phone number or email\"\r\n          });\r\n        } else if (format.length < 9 || format.length > 11) {\r\n          this.setState({ formError: \"Not a valid phone number\" });\r\n        } else {\r\n          console.log(\"phone\", format);\r\n          getUser(`profile.mobilePhone eq \"${format}\"`);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  getUser = query => {\r\n    let options = {\r\n      method: \"GET\",\r\n      mode: \"same-origin\",\r\n      credentials: \"same-origin\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    };\r\n\r\n    fetch(`/foodcommune/site/finduser?queryparams=${query}`, options)\r\n      .then(res => {\r\n        if (res) return res.json();\r\n      })\r\n      .then(res => {\r\n        console.log(res);\r\n        this.startChangePasswordFlow(res.login, res.phone);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  startChangePasswordFlow = (login, phone) => {\r\n    // Toggle view\r\n    this.setState({ userFound: true });\r\n    // Generate 5 digit-verification code\r\n    let verificaiton = Math.floor(Math.random() * 10000) * new Date().getTime();\r\n    let digits = verificaiton.toString().substr(0, 5);\r\n\r\n    // Send digits to profile creator\r\n    let options = {\r\n      method: \"POST\",\r\n      mode: \"same-origin\",\r\n      credentials: \"same-origin\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({ entity: { phone: phone, code: digits } })\r\n    };\r\n\r\n    fetch(\"/foodcommune/site/verify\", options)\r\n      .then(res => {\r\n        if (res) return res.json();\r\n      })\r\n      .then(res => {\r\n        console.log(res);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n    };\r\n    \r\n    setPassword = () => {\r\n\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      // <!-- ROW -->\r\n      <div\r\n        id=\"main-content\"\r\n        className=\"row row-border justify-content-center py-5\"\r\n        style={{ position: \"relative\" }}\r\n      >\r\n        {/* Enter phone or email */}\r\n        <div id=\"login-help\" className=\"col spartan\">\r\n          <div className=\"row justify-content-center\">Password Reset</div>\r\n          <div className=\"row py-4 justify-content-center\">\r\n            <div className=\"col-md-4\">\r\n              <div\r\n                style={{\r\n                  borderRadius: \"5px\",\r\n                  padding: \"20px\",\r\n                  backgroundColor: \"white\",\r\n                  fontSize: \"small\"\r\n                }}\r\n              >\r\n                {/* <!-- email or phone number --> */}\r\n                <div className=\"form-group\">\r\n                  <label for=\"recover-input\">\r\n                    Enter an email or phone number associated with the account.\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"recover-input\"\r\n                    placeholder=\"email or phone\"\r\n                  ></input>\r\n                  <small className=\"text-muted\">\r\n                    Phone numbers do not require special characters (\"-\" or\r\n                    \"()\")\r\n                  </small>\r\n                </div>\r\n                <button\r\n                  id=\"recover-go\"\r\n                  className=\"btn btn-success\"\r\n                  onClick={this.resetGo}\r\n                >\r\n                  Reset\r\n                </button>\r\n                <div\r\n                  id=\"form-error\"\r\n                  className=\"spartan pt-2\"\r\n                  style=\"font-size: x-small; color: red; text-align: center;\"\r\n                ></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* Enter New password and 5 digit code */}\r\n        <div id=\"change-password\" className=\"col spartan\">\r\n          <div className=\"row justify-content-center\">Create New Password</div>\r\n          <div className=\"row py-4 justify-content-center\">\r\n            <div className=\"col-md-4\">\r\n              <div style=\"border-radius: 5px; padding: 20px; background-color: white;font-size: small;\">\r\n                {/* <!-- password --> */}\r\n                <div className=\"form-group\">\r\n                  <label for=\"InputPassword1\">Create Password</label>\r\n                  <div>\r\n                    <small className=\"text-muted\">\r\n                      Must be least 8 characters, a lowercase letter, an\r\n                      uppercase letter, a number, no parts of your username.\r\n                    </small>\r\n                  </div>\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    id=\"InputPassword1\"\r\n                  ></input>\r\n                </div>\r\n                {/* <!-- password verify--> */}\r\n                <div className=\"form-group\">\r\n                  <label for=\"InputPassword2\">Re-type Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    id=\"InputPassword2\"\r\n                  ></input>\r\n                </div>\r\n                {/* <!-- Verificaiton code--> */}\r\n                <div className=\"form-group\">\r\n                  <label for=\"v-code\">5-digit verification code</label>\r\n                  <div>\r\n                    <small className=\"text-muted\">\r\n                      Sent to phone number associated with your account.\r\n                    </small>\r\n                  </div>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"v-code\"\r\n                    style=\"width:100px\"\r\n                  ></input>\r\n                </div>\r\n                <button id=\"set-password-go\" className=\"btn btn-success\">\r\n                  Change password\r\n                </button>\r\n                {this.state.recoverInput && (\r\n                  <div\r\n                    id=\"password-form-error\"\r\n                    className=\"spartan pt-2\"\r\n                    style={{\r\n                      fontSize: \"x-small\",\r\n                      color: \"red\",\r\n                      textAlign: \"center\"\r\n                    }}\r\n                  >\r\n                    {this.state.recoverInput}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PasswordReset;\r\n"]},"metadata":{},"sourceType":"module"}