{"ast":null,"code":"/**\r\n * File:        okta.js\r\n * \r\n * Description: \r\n */\nconsole.log(\"running auth client..\"); //  Okta browser SDK AuthClient\n\nvar config = {\n  issuer: \"https://dev-236245.okta.com/oauth2/default\",\n  clientId: \"0oa4lqivbsKPbAtfs4x6\",\n  redirectUri: \"https://qumoc.com/foodcommune\",\n  responseMode: \"fragment\",\n  tokenManager: {\n    storage: \"sessionStorage\"\n  },\n  onSessionExpired: function () {\n    console.log(\"re-authorization is required\"); // authClient.getWithRedirect();\n  }\n}; // AUTH CLIENT\n\nlet authClient = new window.OktaAuth(config);\nexport const session = () => {\n  // let authClient = this.state.authClient;\n  let session = authClient.session.exists();\n  return session;\n};\nexport const getToken = async session => {\n  // Check for user session\n  if (session) {\n    this.setState({\n      session: true\n    });\n    let user = await authClient.session.get(); // $(\"#user\").html(user.login);\n    // Request token for API access\n\n    let options = {\n      method: \"POST\",\n      mode: \"same-origin\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        entity: {\n          login: user.login,\n          request: \"test\"\n        }\n      })\n    };\n    fetch(\"/foodcommune/secure\", options).then(res => {\n      if (res) return res.json();\n    }).then(res => {\n      if (res.success) {\n        if (this.props.setToken) this.props.setToken(res.token);\n        if (this.props.setUser) this.props.setUser(res.user);\n        this.setState({\n          username: res.user.first_name\n        });\n      }\n    }).then(() => {\n      if (this.props.viewData) this.props.viewData();\n    }).catch(err => {\n      console.log(err);\n    });\n  } else {\n    //     this.setState({ session: false });\n    //     console.log(window.location.href)\n    //   If signed out and not on home page redirect\n    //   if (window.location.href !== \"/foodcommune/\") {\n    // setTimeout(function() {\n    //   window.location.replace(\"/foodcommune\");\n    // }, 1);\n    //   }\n    // Get provisional site access\n    let options = {\n      method: \"POST\",\n      mode: \"same-origin\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        access: this.state.provisional\n      })\n    };\n    fetch(\"/foodcommune/secure/provisional\", options).then(res => {\n      return res.json();\n    }).then(res => {\n      this.setState({\n        provisional: res.token\n      });\n      this.props.updateParentState({\n        provisional: res.token\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/xmark/Desktop/Code/Servers/Qumoc/food-commune/src/util/okta.js"],"names":["console","log","config","issuer","clientId","redirectUri","responseMode","tokenManager","storage","onSessionExpired","authClient","window","OktaAuth","session","exists","getToken","setState","user","get","options","method","mode","credentials","headers","body","JSON","stringify","entity","login","request","fetch","then","res","json","success","props","setToken","token","setUser","username","first_name","viewData","catch","err","access","state","provisional","updateParentState"],"mappings":"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","sourcesContent":["/**\r\n * File:        okta.js\r\n * \r\n * Description: \r\n */\r\nconsole.log(\"running auth client..\");\r\n//  Okta browser SDK AuthClient\r\nvar config = {\r\n    issuer: \"https://dev-236245.okta.com/oauth2/default\",\r\n    clientId: \"0oa4lqivbsKPbAtfs4x6\",\r\n    redirectUri: \"https://qumoc.com/foodcommune\",\r\n    responseMode: \"fragment\",\r\n    tokenManager: {\r\n        storage: \"sessionStorage\"\r\n    },\r\n    onSessionExpired: function () {\r\n        console.log(\"re-authorization is required\");\r\n        // authClient.getWithRedirect();\r\n    }\r\n};\r\n\r\n// AUTH CLIENT\r\nlet authClient = new window.OktaAuth(config);\r\n\r\nexport const session = () => {\r\n    // let authClient = this.state.authClient;\r\n    let session = authClient.session.exists();\r\n    \r\n    return session;\r\n}\r\n\r\nexport const getToken = async (session) => {\r\n    // Check for user session\r\n    if (session) {\r\n        this.setState({ session: true });\r\n        let user = await authClient.session.get();\r\n        // $(\"#user\").html(user.login);\r\n\r\n        // Request token for API access\r\n        let options = {\r\n            method: \"POST\",\r\n            mode: \"same-origin\",\r\n            credentials: \"same-origin\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({ entity: { login: user.login, request: \"test\" } })\r\n        };\r\n\r\n        fetch(\"/foodcommune/secure\", options)\r\n            .then(res => {\r\n                if (res) return res.json();\r\n            })\r\n            .then(res => {\r\n                if (res.success) {\r\n                    if (this.props.setToken) this.props.setToken(res.token);\r\n                    if (this.props.setUser) this.props.setUser(res.user);\r\n                    this.setState({ username: res.user.first_name });\r\n                }\r\n            })\r\n            .then(() => {\r\n                if (this.props.viewData) this.props.viewData();\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    } else {\r\n        //     this.setState({ session: false });\r\n        //     console.log(window.location.href)\r\n        //   If signed out and not on home page redirect\r\n        //   if (window.location.href !== \"/foodcommune/\") {\r\n        // setTimeout(function() {\r\n        //   window.location.replace(\"/foodcommune\");\r\n        // }, 1);\r\n        //   }\r\n\r\n        // Get provisional site access\r\n        let options = {\r\n            method: \"POST\",\r\n            mode: \"same-origin\",\r\n            credentials: \"same-origin\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({ access: this.state.provisional })\r\n        };\r\n        fetch(\"/foodcommune/secure/provisional\", options)\r\n            .then(res => {\r\n                return res.json();\r\n            })\r\n            .then(res => {\r\n                this.setState({ provisional: res.token });\r\n                this.props.updateParentState({ provisional: res.token });\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}