{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\xmark\\\\Desktop\\\\Code\\\\Servers\\\\Qumoc\\\\food-commune\\\\src\\\\components\\\\CatalogView.jsx\";\nimport React, { Component } from 'react';\nimport ItemView from './ItemView';\nimport SearchBar from './SearchBar';\nimport Catalog from './Catalog';\nimport { CatalogActions } from './ItemViewOption';\nimport { connect } from \"react-redux\";\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    token: state.token\n  };\n};\n\nclass CatalogView extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchInput: \"\",\n      modal: null\n    };\n\n    this.viewData = () => {\n      if (this.state.token && this.state.user) {}\n    };\n\n    this.onSearch = ev => {\n      let value = ev.target.value;\n      this.setState({\n        searchInput: value\n      });\n    };\n\n    this.itemView = itemIndex => {\n      console.log(itemIndex);\n      this.setState({\n        modal: this.state.data.Deals[itemIndex]\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState({\n        modal: null\n      });\n    };\n  }\n\n  componentWillMount() {\n    // Get catalog items\n    let data = getCatalog().then(resolved => {\n      console.log(\"DATAAA\", resolved);\n      this.setState({\n        data: resolved\n      });\n    }).catch(err => {\n      console.log(err);\n    }); // Get user clans\n\n    getUserClans(this.state.token, this.state.user.id).then(resolved => {\n      console.log(resolved);\n      this.setState({\n        userClans: resolved.MyClans\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n  /****************************************************\r\n   * Component Data\r\n   */\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, this.state.modal && /*#__PURE__*/React.createElement(ItemView, {\n      modal: this.state.modal,\n      closeModal: this.closeModal,\n      options: CatalogActions(this.state.token, this.state.userClans, this.state.user.id, this.state.modal) //modal as Deal\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"catalog\",\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(SearchBar, {\n      onSearch: this.onSearch,\n      placeHolderVal: rndPlaceHolder(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }), this.state.data && /*#__PURE__*/React.createElement(Catalog, {\n      searchValue: this.state.searchInput,\n      itemView: this.itemView,\n      data: this.state.data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }))));\n  }\n\n}\n\nexport default CatalogView;\n\nfunction rndPlaceHolder() {\n  let time = new Date().getTime();\n\n  if (time % 2 === 0) {\n    return \"What are you looking for?\";\n  } else if (time % 3 === 0) {\n    return \"Carrots, Apples, Tomatoes...\";\n  } else {\n    return \"Strawberries, Onions, Broccoli..\";\n  }\n}\n\nfunction getCatalog() {\n  return new Promise((resolve, reject) => {\n    let options = {\n      method: \"GET\"\n    };\n    fetch(\"https://qumoc.com/foodcommune/site/catalog\", options).then(res => {\n      return res.json();\n    }).then(res => {\n      if (res) {\n        console.log(res);\n        resolve(res);\n      } else {\n        console.log(\"Unable to retrieve data\");\n        reject(\"Did not load\");\n      }\n    });\n  });\n}\n\nfunction getUserClans(token, userId) {\n  return new Promise((resolve, reject) => {\n    let request = {\n      userId: userId\n    };\n    let options = {\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }),\n      body: JSON.stringify({\n        entity: request\n      })\n    };\n    fetch(\"/foodcommune/accounts/userClans\", options).then(res => {\n      return res.json();\n    }).then(res => {\n      console.log(res);\n\n      if (res) {\n        // Return to account detail and display error message\n        resolve(res);\n      } else {\n        reject(\"Unable to retrieve data\");\n      }\n    });\n  });\n}","map":{"version":3,"sources":["C:/Users/xmark/Desktop/Code/Servers/Qumoc/food-commune/src/components/CatalogView.jsx"],"names":["React","Component","ItemView","SearchBar","Catalog","CatalogActions","connect","mapStateToProps","state","user","token","CatalogView","searchInput","modal","viewData","onSearch","ev","value","target","setState","itemView","itemIndex","console","log","data","Deals","closeModal","componentWillMount","getCatalog","then","resolved","catch","err","getUserClans","id","userClans","MyClans","render","rndPlaceHolder","time","Date","getTime","Promise","resolve","reject","options","method","fetch","res","json","userId","request","headers","Headers","Authorization","body","JSON","stringify","entity"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport ItemView from './ItemView';\r\nimport SearchBar from './SearchBar';\r\nimport Catalog from './Catalog';\r\nimport { CatalogActions } from './ItemViewOption';\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.user,\r\n    token: state.token\r\n  };\r\n};\r\n\r\nclass CatalogView extends Component {\r\n  state = {\r\n    searchInput: \"\",\r\n    modal: null\r\n  };\r\n\r\n  componentWillMount() {\r\n    // Get catalog items\r\n    let data = getCatalog()\r\n      .then(resolved => {\r\n        console.log(\"DATAAA\", resolved);\r\n        this.setState({ data: resolved });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n    \r\n    // Get user clans\r\n    getUserClans(this.state.token, this.state.user.id)\r\n        .then(resolved => {\r\n          console.log(resolved);\r\n          this.setState({ userClans: resolved.MyClans });\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        });\r\n  }\r\n\r\n  /****************************************************\r\n   * Component Data\r\n   */\r\n  viewData = () => {\r\n    if (this.state.token && this.state.user) {\r\n      \r\n    }\r\n  };\r\n\r\n\r\n  /*************************************************** */\r\n\r\n  onSearch = ev => {\r\n    let value = ev.target.value;\r\n\r\n    this.setState({ searchInput: value });\r\n  };\r\n\r\n  itemView = itemIndex => {\r\n    console.log(itemIndex);\r\n    this.setState({ modal: this.state.data.Deals[itemIndex] });\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.setState({ modal: null });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {/* <!-- Main Content --> */}\r\n        <div className=\"row\">\r\n          {this.state.modal && (\r\n            <ItemView\r\n              modal={this.state.modal}\r\n              closeModal={this.closeModal}\r\n              options={CatalogActions(this.state.token, this.state.userClans, this.state.user.id, this.state.modal)} //modal as Deal\r\n            />\r\n          )}\r\n          <div id=\"catalog\" className=\"col\">\r\n            <SearchBar\r\n              onSearch={this.onSearch}\r\n              placeHolderVal={rndPlaceHolder()}\r\n            />\r\n            {this.state.data && (\r\n              <Catalog\r\n                searchValue={this.state.searchInput}\r\n                itemView={this.itemView}\r\n                data={this.state.data}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CatalogView;\r\n\r\nfunction rndPlaceHolder() {\r\n  let time = new Date().getTime();\r\n\r\n  if (time % 2 === 0) {\r\n    return \"What are you looking for?\";\r\n  } else if (time % 3 === 0) {\r\n    return \"Carrots, Apples, Tomatoes...\";\r\n  } else {\r\n    return \"Strawberries, Onions, Broccoli..\";\r\n  }\r\n}\r\n\r\nfunction getCatalog() {\r\n  return new Promise((resolve, reject) => {\r\n    let options = {\r\n      method: \"GET\"\r\n      \r\n    };\r\n    fetch(\"https://qumoc.com/foodcommune/site/catalog\", options)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n      .then(res => {\r\n        if (res) {\r\n          console.log(res);\r\n          resolve(res);\r\n        } else {\r\n          console.log(\"Unable to retrieve data\");\r\n          reject(\"Did not load\");\r\n        }\r\n      });\r\n  });\r\n}\r\n\r\nfunction getUserClans(token, userId) {\r\n  return new Promise((resolve, reject) => {\r\n    let request = { userId: userId };\r\n    let options = {\r\n      method: \"POST\",\r\n      headers: new Headers({\r\n        Authorization: \"Bearer \" + token,\r\n        \"Content-Type\": \"application/json\"\r\n      }),\r\n      body: JSON.stringify({\r\n        entity: request\r\n      })\r\n    };\r\n    fetch(\"/foodcommune/accounts/userClans\", options)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n      .then(res => {\r\n        console.log(res);\r\n        if (res) {\r\n          // Return to account detail and display error message\r\n          resolve(res);\r\n        } else {\r\n          reject(\"Unable to retrieve data\");\r\n        }\r\n      });\r\n  });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}