{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\xmark\\\\Desktop\\\\Code\\\\Servers\\\\Qumoc\\\\food-commune\\\\src\\\\components\\\\DashboardView.jsx\";\nimport React, { Component } from 'react';\nimport AddDeal from './AddDeal';\nimport Profile from './Profile';\nimport Buys from './Buys';\nimport Deals from './Deals';\nimport MyGroups from './MyGroups';\n\nclass DashboardView extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      token: null,\n      user: null,\n      data: null,\n      showAddDeal: false,\n      editDeal: null\n    };\n\n    this.viewData = () => {\n      fetchData(this.state.token, this.state.user.id).then(resolved => {\n        console.log(resolved);\n        this.setState({\n          data: resolved\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.newDeal = payload => {\n      insertDeal(this.state.token, this.state.user.id, payload).then(resolved => {\n        console.log(resolved);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.updateDeal = payload => {\n      updateDealEdit(this.state.token, this.state.user.id, payload).then(resolved => {\n        console.log(resolved);\n        this.setState(prevState => {\n          let Deals = [...prevState.data.Deals];\n          let deal = Deals.findIndex(obj => {\n            return obj.id === payload.id;\n          });\n          Deals[deal] = payload;\n          let data = { ...prevState.data,\n            Deals: Deals\n          };\n          return {\n            data: data\n          };\n        }, () => {\n          this.setState({\n            showAddDeal: false\n          });\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.setToken = token => {\n      this.setState({\n        token: token\n      });\n    };\n\n    this.setUser = user => {\n      this.setState({\n        user: user\n      });\n    };\n\n    this.showAddDeal = toggle => {\n      this.setState({\n        showAddDeal: this.state.showAddDeal ? false : true,\n        editDeal: null\n      });\n    };\n\n    this.editDeal = index => {\n      this.setState({\n        editDeal: this.state.data.Deals[index],\n        showAddDeal: true\n      });\n    };\n\n    this.updateProfile = payload => {\n      updateUserProfile(this.state.token, this.state.user.id, payload).then(resolved => {\n        console.log(resolved);\n        this.setState(prevState => {\n          let user = { ...prevState.user\n          };\n          let keys = Object.keys(payload);\n          keys.forEach(k => {\n            user[k] = payload[k];\n          });\n          return {\n            user: user\n          };\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"dashboard\",\n      className: \"row row-border justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, this.state.showAddDeal && /*#__PURE__*/React.createElement(AddDeal, {\n      editDeal: this.state.editDeal,\n      showAddDeal: this.showAddDeal,\n      user: this.state.user,\n      newDeal: this.newDeal,\n      updateDeal: this.updateDeal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"main-content\",\n      className: \"col-sm-12 col-md-10 spartan py-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"profile-card\",\n      className: \"col-sm-12 col-lg-6 d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }\n    }, this.state.user && /*#__PURE__*/React.createElement(Profile, {\n      user: this.state.user,\n      updateProfile: this.updateProfile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"groups-card\",\n      className: \"col-sm-12 col-lg-6 d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(MyGroups, {\n      data: this.state.data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"buys-card\",\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Buys, {\n      data: this.state.data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"buys-card\",\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Deals, {\n      showAddDeal: this.showAddDeal,\n      data: this.state.data,\n      user: this.state.user,\n      editDeal: this.editDeal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }))))));\n  }\n\n}\n\nexport default DashboardView;\n\nfunction fetchData(token, userid) {\n  console.log(\"fetching data......\", token, userid);\n  return new Promise((resolve, reject) => {\n    let request = {\n      userId: userid\n    };\n    let options = {\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }),\n      body: JSON.stringify({\n        entity: request\n      })\n    };\n    fetch(\"https://qumoc.com/foodcommune/accounts/dashboard\", options).then(res => {\n      return res.json();\n    }).then(res => {\n      if (!res.success) {\n        // Return to account detail and display error message\n        resolve(res);\n      } else {\n        reject(\"Unable to retrieve data\");\n      }\n    });\n  });\n}\n\nfunction insertDeal(token, userid, payload) {\n  console.log(\"fetching data......\", token, userid);\n  payload.user_id = userid; // Append user_id to payload\n\n  return new Promise((resolve, reject) => {\n    let options = {\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }),\n      body: JSON.stringify({\n        entity: payload\n      })\n    };\n    fetch(\"/foodcommune/accounts/insertDeal\", options).then(res => {\n      return res.json();\n    }).then(res => {\n      if (!res.success) {\n        // Return to account detail and display error message\n        resolve(res);\n      } else {\n        reject(res);\n      }\n    });\n  });\n}\n\nfunction updateDealEdit(token, userid, payload) {\n  console.log(\"fetching data......\", token, userid);\n  payload.user_id = userid; // Append user_id to payload\n\n  return new Promise((resolve, reject) => {\n    let options = {\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }),\n      body: JSON.stringify({\n        entity: payload\n      })\n    };\n    fetch(\"/foodcommune/accounts/updateDeal\", options).then(res => {\n      return res.json();\n    }).then(res => {\n      if (res.success) {\n        // Return to account detail and display error message\n        resolve(res);\n      } else {\n        reject(res);\n      }\n    });\n  });\n}\n\nfunction updateUserProfile(token, userid, payload) {\n  let payloadObj = {\n    userId: userid,\n    values: payload\n  };\n  console.log(\"fetching data......\", token, userid);\n  return new Promise((resolve, reject) => {\n    let options = {\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }),\n      body: JSON.stringify({\n        entity: payloadObj\n      })\n    };\n    fetch(\"/foodcommune/accounts/updateUserProfile\", options).then(res => {\n      return res.json();\n    }).then(res => {\n      if (res.success) {\n        // Return to account detail and display error message\n        resolve(res);\n      } else {\n        reject(res);\n      }\n    });\n  });\n}","map":{"version":3,"sources":["C:/Users/xmark/Desktop/Code/Servers/Qumoc/food-commune/src/components/DashboardView.jsx"],"names":["React","Component","AddDeal","Profile","Buys","Deals","MyGroups","DashboardView","state","token","user","data","showAddDeal","editDeal","viewData","fetchData","id","then","resolved","console","log","setState","catch","err","newDeal","payload","insertDeal","updateDeal","updateDealEdit","prevState","deal","findIndex","obj","setToken","setUser","toggle","index","updateProfile","updateUserProfile","keys","Object","forEach","k","render","userid","Promise","resolve","reject","request","userId","options","method","headers","Headers","Authorization","body","JSON","stringify","entity","fetch","res","json","success","user_id","payloadObj","values"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport AddDeal from './AddDeal';\r\nimport Profile from './Profile';\r\nimport Buys from './Buys';\r\nimport Deals from './Deals';\r\nimport MyGroups from './MyGroups';\r\n\r\nclass DashboardView extends Component {\r\n  state = {\r\n    token: null,\r\n    user: null,\r\n    data: null,\r\n    showAddDeal: false,\r\n    editDeal: null\r\n  };\r\n\r\n  viewData = () => {\r\n    fetchData(this.state.token, this.state.user.id)\r\n      .then(resolved => {\r\n        console.log(resolved);\r\n        this.setState({ data: resolved });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  newDeal = payload => {\r\n    insertDeal(this.state.token, this.state.user.id, payload)\r\n      .then(resolved => {\r\n        console.log(resolved);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  updateDeal = payload => {\r\n    updateDealEdit(this.state.token, this.state.user.id, payload)\r\n      .then(resolved => {\r\n        console.log(resolved);\r\n        this.setState(\r\n          prevState => {\r\n            let Deals = [...prevState.data.Deals];\r\n            let deal = Deals.findIndex(obj => {\r\n              return obj.id === payload.id;\r\n            });\r\n            Deals[deal] = payload;\r\n\r\n            let data = { ...prevState.data, Deals: Deals };\r\n            return { data: data };\r\n          },\r\n          () => {\r\n            this.setState({ showAddDeal: false });\r\n          }\r\n        );\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  setToken = token => {\r\n    this.setState({ token: token });\r\n  };\r\n\r\n  setUser = user => {\r\n    this.setState({ user: user });\r\n  };\r\n\r\n  showAddDeal = toggle => {\r\n    this.setState({\r\n      showAddDeal: this.state.showAddDeal ? false : true,\r\n      editDeal: null\r\n    });\r\n  };\r\n\r\n  editDeal = index => {\r\n    this.setState({\r\n      editDeal: this.state.data.Deals[index],\r\n      showAddDeal: true\r\n    });\r\n  };\r\n\r\n  updateProfile = payload => {\r\n    updateUserProfile(this.state.token, this.state.user.id, payload)\r\n      .then(resolved => {\r\n        console.log(resolved);\r\n        this.setState(prevState => {\r\n          let user = { ...prevState.user };\r\n          let keys = Object.keys(payload);\r\n          keys.forEach(k => {\r\n            user[k] = payload[k];\r\n          });\r\n\r\n          return { user: user };\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {/* Dashboard */}\r\n        <div id=\"dashboard\" className=\"row row-border justify-content-center\">\r\n          {/* Add Deal */}\r\n          {this.state.showAddDeal && (\r\n            <AddDeal\r\n              editDeal={this.state.editDeal}\r\n              showAddDeal={this.showAddDeal}\r\n              user={this.state.user}\r\n              newDeal={this.newDeal}\r\n              updateDeal={this.updateDeal}\r\n            />\r\n          )}\r\n          <div id=\"main-content\" className=\"col-sm-12 col-md-10 spartan py-4\">\r\n            <div className=\"row\">\r\n              <div id=\"profile-card\" className=\"col-sm-12 col-lg-6 d-flex\">\r\n                {/* <!-- PROFILE --> */}\r\n                {this.state.user && (\r\n                  <Profile\r\n                    user={this.state.user}\r\n                    updateProfile={this.updateProfile}\r\n                  />\r\n                )}\r\n              </div>\r\n\r\n              <div id=\"groups-card\" className=\"col-sm-12 col-lg-6 d-flex\">\r\n                {/* <!-- GROUPS --> */}\r\n                <MyGroups data={this.state.data} />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mt-4\">\r\n              <div id=\"buys-card\" className=\"col-12\">\r\n                {/* <!-- BUYS --> */}\r\n                <Buys data={this.state.data} />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mt-4\">\r\n              <div id=\"buys-card\" className=\"col-12\">\r\n                {/* <!-- DEALS --> */}\r\n                <Deals\r\n                  showAddDeal={this.showAddDeal}\r\n                  data={this.state.data}\r\n                  user={this.state.user}\r\n                  editDeal={this.editDeal}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DashboardView;\r\n\r\nfunction fetchData(token, userid) {\r\n  console.log(\"fetching data......\", token, userid);\r\n  return new Promise((resolve, reject) => {\r\n    let request = { userId: userid };\r\n    let options = {\r\n      method: \"POST\",\r\n      headers: new Headers({\r\n        Authorization: \"Bearer \" + token,\r\n        \"Content-Type\": \"application/json\"\r\n      }),\r\n      body: JSON.stringify({\r\n        entity: request\r\n      })\r\n    };\r\n    fetch(\"https://qumoc.com/foodcommune/accounts/dashboard\", options)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n      .then(res => {\r\n        if (!res.success) {\r\n          // Return to account detail and display error message\r\n          resolve(res);\r\n        } else {\r\n          reject(\"Unable to retrieve data\");\r\n        }\r\n      });\r\n  });\r\n}\r\n\r\nfunction insertDeal(token, userid, payload) {\r\n  console.log(\"fetching data......\", token, userid);\r\n  payload.user_id = userid; // Append user_id to payload\r\n  return new Promise((resolve, reject) => {\r\n    let options = {\r\n      method: \"POST\",\r\n      headers: new Headers({\r\n        Authorization: \"Bearer \" + token,\r\n        \"Content-Type\": \"application/json\"\r\n      }),\r\n      body: JSON.stringify({\r\n        entity: payload\r\n      })\r\n    };\r\n    fetch(\"/foodcommune/accounts/insertDeal\", options)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n      .then(res => {\r\n        if (!res.success) {\r\n          // Return to account detail and display error message\r\n          resolve(res);\r\n        } else {\r\n          reject(res);\r\n        }\r\n      });\r\n  });\r\n}\r\n\r\nfunction updateDealEdit(token, userid, payload) {\r\n  console.log(\"fetching data......\", token, userid);\r\n  payload.user_id = userid; // Append user_id to payload\r\n  return new Promise((resolve, reject) => {\r\n    let options = {\r\n      method: \"POST\",\r\n      headers: new Headers({\r\n        Authorization: \"Bearer \" + token,\r\n        \"Content-Type\": \"application/json\"\r\n      }),\r\n      body: JSON.stringify({\r\n        entity: payload\r\n      })\r\n    };\r\n    fetch(\"/foodcommune/accounts/updateDeal\", options)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n      .then(res => {\r\n        if (res.success) {\r\n          // Return to account detail and display error message\r\n          resolve(res);\r\n        } else {\r\n          reject(res);\r\n        }\r\n      });\r\n  });\r\n}\r\n\r\nfunction updateUserProfile(token, userid, payload) {\r\n  let payloadObj = { userId: userid, values: payload };\r\n  console.log(\"fetching data......\", token, userid);\r\n  return new Promise((resolve, reject) => {\r\n    let options = {\r\n      method: \"POST\",\r\n      headers: new Headers({\r\n        Authorization: \"Bearer \" + token,\r\n        \"Content-Type\": \"application/json\"\r\n      }),\r\n      body: JSON.stringify({\r\n        entity: payloadObj\r\n      })\r\n    };\r\n    fetch(\"/foodcommune/accounts/updateUserProfile\", options)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n      .then(res => {\r\n        if (res.success) {\r\n          // Return to account detail and display error message\r\n          resolve(res);\r\n        } else {\r\n          reject(res);\r\n        }\r\n      });\r\n  });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}